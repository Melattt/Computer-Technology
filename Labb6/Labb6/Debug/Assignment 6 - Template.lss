
Assignment 6 - Template.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800200  00001502  00001596  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001502  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000078  00800252  00800252  000015e8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014fb  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000df3  00000000  00000000  00002c07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000074e  00000000  00000000  000039fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  00004148  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000675  00000000  00000000  00004278  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000058c  00000000  00000000  000048ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004e79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f2 c0       	rjmp	.+484    	; 0x1e6 <__ctors_end>
       2:	00 00       	nop
       4:	10 c1       	rjmp	.+544    	; 0x226 <__bad_interrupt>
       6:	00 00       	nop
       8:	0e c1       	rjmp	.+540    	; 0x226 <__bad_interrupt>
       a:	00 00       	nop
       c:	0c c1       	rjmp	.+536    	; 0x226 <__bad_interrupt>
       e:	00 00       	nop
      10:	0a c1       	rjmp	.+532    	; 0x226 <__bad_interrupt>
      12:	00 00       	nop
      14:	08 c1       	rjmp	.+528    	; 0x226 <__bad_interrupt>
      16:	00 00       	nop
      18:	06 c1       	rjmp	.+524    	; 0x226 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	04 c1       	rjmp	.+520    	; 0x226 <__bad_interrupt>
      1e:	00 00       	nop
      20:	02 c1       	rjmp	.+516    	; 0x226 <__bad_interrupt>
      22:	00 00       	nop
      24:	00 c1       	rjmp	.+512    	; 0x226 <__bad_interrupt>
      26:	00 00       	nop
      28:	fe c0       	rjmp	.+508    	; 0x226 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	fc c0       	rjmp	.+504    	; 0x226 <__bad_interrupt>
      2e:	00 00       	nop
      30:	fa c0       	rjmp	.+500    	; 0x226 <__bad_interrupt>
      32:	00 00       	nop
      34:	f8 c0       	rjmp	.+496    	; 0x226 <__bad_interrupt>
      36:	00 00       	nop
      38:	f6 c0       	rjmp	.+492    	; 0x226 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f4 c0       	rjmp	.+488    	; 0x226 <__bad_interrupt>
      3e:	00 00       	nop
      40:	f2 c0       	rjmp	.+484    	; 0x226 <__bad_interrupt>
      42:	00 00       	nop
      44:	f0 c0       	rjmp	.+480    	; 0x226 <__bad_interrupt>
      46:	00 00       	nop
      48:	ee c0       	rjmp	.+476    	; 0x226 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ec c0       	rjmp	.+472    	; 0x226 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ea c0       	rjmp	.+468    	; 0x226 <__bad_interrupt>
      52:	00 00       	nop
      54:	e8 c0       	rjmp	.+464    	; 0x226 <__bad_interrupt>
      56:	00 00       	nop
      58:	e6 c0       	rjmp	.+460    	; 0x226 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e4 c0       	rjmp	.+456    	; 0x226 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e2 c0       	rjmp	.+452    	; 0x226 <__bad_interrupt>
      62:	00 00       	nop
      64:	33 c1       	rjmp	.+614    	; 0x2cc <__vector_25>
      66:	00 00       	nop
      68:	de c0       	rjmp	.+444    	; 0x226 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	dc c0       	rjmp	.+440    	; 0x226 <__bad_interrupt>
      6e:	00 00       	nop
      70:	da c0       	rjmp	.+436    	; 0x226 <__bad_interrupt>
      72:	00 00       	nop
      74:	d8 c0       	rjmp	.+432    	; 0x226 <__bad_interrupt>
      76:	00 00       	nop
      78:	d6 c0       	rjmp	.+428    	; 0x226 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d4 c0       	rjmp	.+424    	; 0x226 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d2 c0       	rjmp	.+420    	; 0x226 <__bad_interrupt>
      82:	00 00       	nop
      84:	d0 c0       	rjmp	.+416    	; 0x226 <__bad_interrupt>
      86:	00 00       	nop
      88:	ce c0       	rjmp	.+412    	; 0x226 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	cc c0       	rjmp	.+408    	; 0x226 <__bad_interrupt>
      8e:	00 00       	nop
      90:	ca c0       	rjmp	.+404    	; 0x226 <__bad_interrupt>
      92:	00 00       	nop
      94:	c8 c0       	rjmp	.+400    	; 0x226 <__bad_interrupt>
      96:	00 00       	nop
      98:	c6 c0       	rjmp	.+396    	; 0x226 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c4 c0       	rjmp	.+392    	; 0x226 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	c2 c0       	rjmp	.+388    	; 0x226 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	c0 c0       	rjmp	.+384    	; 0x226 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	be c0       	rjmp	.+380    	; 0x226 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	bc c0       	rjmp	.+376    	; 0x226 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ba c0       	rjmp	.+372    	; 0x226 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b8 c0       	rjmp	.+368    	; 0x226 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b6 c0       	rjmp	.+364    	; 0x226 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b4 c0       	rjmp	.+360    	; 0x226 <__bad_interrupt>
      be:	00 00       	nop
      c0:	b2 c0       	rjmp	.+356    	; 0x226 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	b0 c0       	rjmp	.+352    	; 0x226 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ae c0       	rjmp	.+348    	; 0x226 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ac c0       	rjmp	.+344    	; 0x226 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	aa c0       	rjmp	.+340    	; 0x226 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a8 c0       	rjmp	.+336    	; 0x226 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a6 c0       	rjmp	.+332    	; 0x226 <__bad_interrupt>
      da:	00 00       	nop
      dc:	a4 c0       	rjmp	.+328    	; 0x226 <__bad_interrupt>
      de:	00 00       	nop
      e0:	a2 c0       	rjmp	.+324    	; 0x226 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__ctors_end>:
     1e6:	11 24       	eor	r1, r1
     1e8:	1f be       	out	0x3f, r1	; 63
     1ea:	cf ef       	ldi	r28, 0xFF	; 255
     1ec:	d1 e2       	ldi	r29, 0x21	; 33
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61
     1f2:	00 e0       	ldi	r16, 0x00	; 0
     1f4:	0c bf       	out	0x3c, r16	; 60

000001f6 <__do_copy_data>:
     1f6:	12 e0       	ldi	r17, 0x02	; 2
     1f8:	a0 e0       	ldi	r26, 0x00	; 0
     1fa:	b2 e0       	ldi	r27, 0x02	; 2
     1fc:	e2 e0       	ldi	r30, 0x02	; 2
     1fe:	f5 e1       	ldi	r31, 0x15	; 21
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0b bf       	out	0x3b, r16	; 59
     204:	02 c0       	rjmp	.+4      	; 0x20a <__do_copy_data+0x14>
     206:	07 90       	elpm	r0, Z+
     208:	0d 92       	st	X+, r0
     20a:	a2 35       	cpi	r26, 0x52	; 82
     20c:	b1 07       	cpc	r27, r17
     20e:	d9 f7       	brne	.-10     	; 0x206 <__do_copy_data+0x10>

00000210 <__do_clear_bss>:
     210:	22 e0       	ldi	r18, 0x02	; 2
     212:	a2 e5       	ldi	r26, 0x52	; 82
     214:	b2 e0       	ldi	r27, 0x02	; 2
     216:	01 c0       	rjmp	.+2      	; 0x21a <.do_clear_bss_start>

00000218 <.do_clear_bss_loop>:
     218:	1d 92       	st	X+, r1

0000021a <.do_clear_bss_start>:
     21a:	aa 3c       	cpi	r26, 0xCA	; 202
     21c:	b2 07       	cpc	r27, r18
     21e:	e1 f7       	brne	.-8      	; 0x218 <.do_clear_bss_loop>
     220:	a4 d0       	rcall	.+328    	; 0x36a <main>
     222:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <_exit>

00000226 <__bad_interrupt>:
     226:	ec ce       	rjmp	.-552    	; 0x0 <__vectors>

00000228 <ADC_init>:

void ADC_init(uint8_t mux)
{
	// 1. AVCC with external capacitor at AREF pin
	// 2. MUX[4:0]
	ADMUX = (0b01 << REFS0) + (mux & 0b11111);
     228:	98 2f       	mov	r25, r24
     22a:	9f 71       	andi	r25, 0x1F	; 31
     22c:	90 5c       	subi	r25, 0xC0	; 192
     22e:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// MUX[5]
	ADCSRB = (mux & 0b100000) >> 2;
     232:	80 72       	andi	r24, 0x20	; 32
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	95 95       	asr	r25
     238:	87 95       	ror	r24
     23a:	95 95       	asr	r25
     23c:	87 95       	ror	r24
     23e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>

	// 1. Enable conversion.
	// 2. Set prescaler = 128 so we get a frequency between 50-100 kHz see chap 26.4.
	ADCSRA = (1 << ADEN) | (0b111 << ADPS0);
     242:	87 e8       	ldi	r24, 0x87	; 135
     244:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     248:	08 95       	ret

0000024a <ADC_read_voltage>:
}

double ADC_read_voltage()
{
	// Start conversion
	ADCSRA = ADCSRA | (1 << ADSC);
     24a:	ea e7       	ldi	r30, 0x7A	; 122
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	80 64       	ori	r24, 0x40	; 64
     252:	80 83       	st	Z, r24
	
	// Wait for completion
	while((ADCSRA &  (1 << ADSC)) == (1 << ADSC));
     254:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     258:	86 fd       	sbrc	r24, 6
     25a:	fc cf       	rjmp	.-8      	; 0x254 <ADC_read_voltage+0xa>
	
	return 	((ADCH << 8) + ADCL) * VREF / 1024.0;
     25c:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	76 2f       	mov	r23, r22
     264:	66 27       	eor	r22, r22
     266:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     26a:	68 0f       	add	r22, r24
     26c:	71 1d       	adc	r23, r1
     26e:	07 2e       	mov	r0, r23
     270:	00 0c       	add	r0, r0
     272:	88 0b       	sbc	r24, r24
     274:	99 0b       	sbc	r25, r25
     276:	15 d3       	rcall	.+1578   	; 0x8a2 <__floatsisf>
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	40 ea       	ldi	r20, 0xA0	; 160
     27e:	50 e4       	ldi	r21, 0x40	; 64
     280:	9c d3       	rcall	.+1848   	; 0x9ba <__mulsf3>
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e8       	ldi	r20, 0x80	; 128
     288:	5a e3       	ldi	r21, 0x3A	; 58
     28a:	97 c3       	rjmp	.+1838   	; 0x9ba <__mulsf3>
}
     28c:	08 95       	ret

0000028e <lm35_read_temp>:
	Read temp.
	Don't forget to call ADC_init() before calling this function.
*/
double lm35_read_temp()
{	
	return ADC_read_voltage() / 0.01;
     28e:	dd df       	rcall	.-70     	; 0x24a <ADC_read_voltage>
     290:	2a e0       	ldi	r18, 0x0A	; 10
     292:	37 ed       	ldi	r19, 0xD7	; 215
     294:	43 e2       	ldi	r20, 0x23	; 35
     296:	5c e3       	ldi	r21, 0x3C	; 60
     298:	9a c2       	rjmp	.+1332   	; 0x7ce <__divsf3>
}
     29a:	08 95       	ret

0000029c <send_log_msg>:
// Send a string using USART
void send_log_msg(char *str)
{
     29c:	fc 01       	movw	r30, r24
	while(*str != NULL)
     29e:	03 c0       	rjmp	.+6      	; 0x2a6 <send_log_msg+0xa>
	{
		UDR0 = *str;
     2a0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
		str ++;
     2a4:	31 96       	adiw	r30, 0x01	; 1
	return ADC_read_voltage() / 0.01;
}
// Send a string using USART
void send_log_msg(char *str)
{
	while(*str != NULL)
     2a6:	80 81       	ld	r24, Z
     2a8:	81 11       	cpse	r24, r1
     2aa:	fa cf       	rjmp	.-12     	; 0x2a0 <send_log_msg+0x4>
	{
		UDR0 = *str;
		str ++;
	}
}
     2ac:	08 95       	ret

000002ae <Looper>:
	}
	
}
void Looper(char data)
{
		recieved[list_index] = data; // store a character in the list
     2ae:	20 91 54 02 	lds	r18, 0x0254	; 0x800254 <list_index>
     2b2:	30 91 55 02 	lds	r19, 0x0255	; 0x800255 <list_index+0x1>
     2b6:	f9 01       	movw	r30, r18
     2b8:	ea 5a       	subi	r30, 0xAA	; 170
     2ba:	fd 4f       	sbci	r31, 0xFD	; 253
     2bc:	80 83       	st	Z, r24
		list_index++;
     2be:	2f 5f       	subi	r18, 0xFF	; 255
     2c0:	3f 4f       	sbci	r19, 0xFF	; 255
     2c2:	30 93 55 02 	sts	0x0255, r19	; 0x800255 <list_index+0x1>
     2c6:	20 93 54 02 	sts	0x0254, r18	; 0x800254 <list_index>
     2ca:	08 95       	ret

000002cc <__vector_25>:
		UDR0 = *str;
		str ++;
	}
}
ISR(USART0_RX_vect)
{	
     2cc:	1f 92       	push	r1
     2ce:	0f 92       	push	r0
     2d0:	0f b6       	in	r0, 0x3f	; 63
     2d2:	0f 92       	push	r0
     2d4:	11 24       	eor	r1, r1
     2d6:	0b b6       	in	r0, 0x3b	; 59
     2d8:	0f 92       	push	r0
     2da:	2f 93       	push	r18
     2dc:	3f 93       	push	r19
     2de:	4f 93       	push	r20
     2e0:	5f 93       	push	r21
     2e2:	6f 93       	push	r22
     2e4:	7f 93       	push	r23
     2e6:	8f 93       	push	r24
     2e8:	9f 93       	push	r25
     2ea:	af 93       	push	r26
     2ec:	bf 93       	push	r27
     2ee:	ef 93       	push	r30
     2f0:	ff 93       	push	r31
	// Code required here handling incoming bytes.
	while (! (UCSR0A & (1<<RXC1)))
     2f2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     2f6:	88 23       	and	r24, r24
     2f8:	e4 f7       	brge	.-8      	; 0x2f2 <__vector_25+0x26>
	{	
	}
	int data =  UDR0;
     2fa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     2fe:	90 e0       	ldi	r25, 0x00	; 0
	if (data =='\n')
     300:	8a 30       	cpi	r24, 0x0A	; 10
     302:	91 05       	cpc	r25, r1
     304:	29 f4       	brne	.+10     	; 0x310 <__vector_25+0x44>
	{
		list_index = 0;
     306:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <list_index+0x1>
     30a:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <list_index>
     30e:	01 c0       	rjmp	.+2      	; 0x312 <__vector_25+0x46>
	}else{
		Looper(data);
     310:	ce df       	rcall	.-100    	; 0x2ae <Looper>
	}
	
}
     312:	ff 91       	pop	r31
     314:	ef 91       	pop	r30
     316:	bf 91       	pop	r27
     318:	af 91       	pop	r26
     31a:	9f 91       	pop	r25
     31c:	8f 91       	pop	r24
     31e:	7f 91       	pop	r23
     320:	6f 91       	pop	r22
     322:	5f 91       	pop	r21
     324:	4f 91       	pop	r20
     326:	3f 91       	pop	r19
     328:	2f 91       	pop	r18
     32a:	0f 90       	pop	r0
     32c:	0b be       	out	0x3b, r0	; 59
     32e:	0f 90       	pop	r0
     330:	0f be       	out	0x3f, r0	; 63
     332:	0f 90       	pop	r0
     334:	1f 90       	pop	r1
     336:	18 95       	reti

00000338 <trigger_cmd>:
	PORTA = data;
	trigger_cmd();
}
void trigger_cmd()
{
	PORTC = PORTC | (1<<PC2);
     338:	88 b1       	in	r24, 0x08	; 8
     33a:	84 60       	ori	r24, 0x04	; 4
     33c:	88 b9       	out	0x08, r24	; 8
	PORTC = PORTC & ~ (1<<PC2);
     33e:	88 b1       	in	r24, 0x08	; 8
     340:	8b 7f       	andi	r24, 0xFB	; 251
     342:	88 b9       	out	0x08, r24	; 8
     344:	08 95       	ret

00000346 <write>:
	write(data);
	
}
void write(char data)
{
	PORTC = PORTC & ~ (1<<PC1);
     346:	98 b1       	in	r25, 0x08	; 8
     348:	9d 7f       	andi	r25, 0xFD	; 253
     34a:	98 b9       	out	0x08, r25	; 8
	PORTA = data;
     34c:	82 b9       	out	0x02, r24	; 2
	trigger_cmd();
     34e:	f4 cf       	rjmp	.-24     	; 0x338 <trigger_cmd>
     350:	08 95       	ret

00000352 <Write_cmd>:
		list_index++;
}
	
void Write_cmd(char data) 
{
	PORTC = PORTC & ~ (1<<PC0);
     352:	98 b1       	in	r25, 0x08	; 8
     354:	9e 7f       	andi	r25, 0xFE	; 254
     356:	98 b9       	out	0x08, r25	; 8
	write(data);
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	f5 cf       	rjmp	.-22     	; 0x346 <write>
     35c:	08 95       	ret

0000035e <write_char>:
	
}
void write_char(char data){
	PORTC = PORTC | (1<<PC0);
     35e:	98 b1       	in	r25, 0x08	; 8
     360:	91 60       	ori	r25, 0x01	; 1
     362:	98 b9       	out	0x08, r25	; 8
	write(data);
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	ef cf       	rjmp	.-34     	; 0x346 <write>
     368:	08 95       	ret

0000036a <main>:
{
	PORTC = PORTC | (1<<PC2);
	PORTC = PORTC & ~ (1<<PC2);
}
int main(void)
{	
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	cd b7       	in	r28, 0x3d	; 61
     370:	de b7       	in	r29, 0x3e	; 62
     372:	a0 97       	sbiw	r28, 0x20	; 32
     374:	0f b6       	in	r0, 0x3f	; 63
     376:	f8 94       	cli
     378:	de bf       	out	0x3e, r29	; 62
     37a:	0f be       	out	0x3f, r0	; 63
     37c:	cd bf       	out	0x3d, r28	; 61
	// Connect PORTF pin 0, i.e ADC0, to temp sensor.
	// See pinout on page 2 and MUX table on page 290. 
	ADC_init(0b00000);
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	53 df       	rcall	.-346    	; 0x228 <ADC_init>
		
	// Init USART here
		/* Set baud rate */
	UBRR0H = (ubrr>>8);
     382:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
	UBRR0L = ubrr;
     386:	87 e6       	ldi	r24, 0x67	; 103
     388:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
	/* Enable Rx complete interrupt, data register empty interrupt, receiver and transmitter */
	UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
     38c:	01 ec       	ldi	r16, 0xC1	; 193
     38e:	10 e0       	ldi	r17, 0x00	; 0
     390:	88 eb       	ldi	r24, 0xB8	; 184
     392:	f8 01       	movw	r30, r16
     394:	80 83       	st	Z, r24
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (0<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);
     396:	86 e0       	ldi	r24, 0x06	; 6
     398:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
	
	// Note! There are C examples in the ATmega2560 manual!
	
	// Init LCD here 
	DDRA = 0b11111111;
     39c:	8f ef       	ldi	r24, 0xFF	; 255
     39e:	81 b9       	out	0x01, r24	; 1
	DDRC = 0b111;
     3a0:	87 e0       	ldi	r24, 0x07	; 7
     3a2:	87 b9       	out	0x07, r24	; 7
	Write_cmd(0b00001110);
     3a4:	8e e0       	ldi	r24, 0x0E	; 14
     3a6:	d5 df       	rcall	.-86     	; 0x352 <Write_cmd>
	sei();
     3a8:	78 94       	sei
	char helloMessage[16] = "microchip is on!";
     3aa:	80 e1       	ldi	r24, 0x10	; 16
     3ac:	e0 e0       	ldi	r30, 0x00	; 0
     3ae:	f2 e0       	ldi	r31, 0x02	; 2
     3b0:	de 01       	movw	r26, r28
     3b2:	11 96       	adiw	r26, 0x01	; 1
     3b4:	01 90       	ld	r0, Z+
     3b6:	0d 92       	st	X+, r0
     3b8:	8a 95       	dec	r24
     3ba:	e1 f7       	brne	.-8      	; 0x3b4 <main+0x4a>
	int *x = NULL;
	x = &helloMessage;
	send_log_msg(x);
     3bc:	ce 01       	movw	r24, r28
     3be:	01 96       	adiw	r24, 0x01	; 1
     3c0:	6d df       	rcall	.-294    	; 0x29c <send_log_msg>
	UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
     3c2:	80 eb       	ldi	r24, 0xB0	; 176
     3c4:	f8 01       	movw	r30, r16
     3c6:	80 83       	st	Z, r24
    /* Replace with your application code */
    while (1)
    {	
		// check if the char list contains 16 characters
		int check_index = 0;
		for(int j = 0; j < 16; j++)
     3c8:	80 e0       	ldi	r24, 0x00	; 0
     3ca:	90 e0       	ldi	r25, 0x00	; 0
			
    /* Replace with your application code */
    while (1)
    {	
		// check if the char list contains 16 characters
		int check_index = 0;
     3cc:	40 e0       	ldi	r20, 0x00	; 0
     3ce:	50 e0       	ldi	r21, 0x00	; 0
		for(int j = 0; j < 16; j++)
     3d0:	09 c0       	rjmp	.+18     	; 0x3e4 <main+0x7a>
		{
			if(recieved[j] != NULL)
     3d2:	fc 01       	movw	r30, r24
     3d4:	ea 5a       	subi	r30, 0xAA	; 170
     3d6:	fd 4f       	sbci	r31, 0xFD	; 253
     3d8:	20 81       	ld	r18, Z
     3da:	22 23       	and	r18, r18
     3dc:	11 f0       	breq	.+4      	; 0x3e2 <main+0x78>
			{
				check_index++;
     3de:	4f 5f       	subi	r20, 0xFF	; 255
     3e0:	5f 4f       	sbci	r21, 0xFF	; 255
    /* Replace with your application code */
    while (1)
    {	
		// check if the char list contains 16 characters
		int check_index = 0;
		for(int j = 0; j < 16; j++)
     3e2:	01 96       	adiw	r24, 0x01	; 1
     3e4:	80 31       	cpi	r24, 0x10	; 16
     3e6:	91 05       	cpc	r25, r1
     3e8:	a4 f3       	brlt	.-24     	; 0x3d2 <main+0x68>
			{
				check_index++;
			}
		}
		// redo assignment5 starts here
		if(check_index == 16)
     3ea:	40 31       	cpi	r20, 0x10	; 16
     3ec:	51 05       	cpc	r21, r1
     3ee:	09 f0       	breq	.+2      	; 0x3f2 <main+0x88>
     3f0:	81 c0       	rjmp	.+258    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
		{
			if (logger == 1)
     3f2:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     3f6:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     3fa:	01 97       	sbiw	r24, 0x01	; 1
     3fc:	59 f4       	brne	.+22     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
     3fe:	01 ec       	ldi	r16, 0xC1	; 193
     400:	10 e0       	ldi	r17, 0x00	; 0
     402:	88 eb       	ldi	r24, 0xB8	; 184
     404:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
     406:	80 83       	st	Z, r24
     408:	81 e2       	ldi	r24, 0x21	; 33
     40a:	92 e0       	ldi	r25, 0x02	; 2
     40c:	47 df       	rcall	.-370    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
     40e:	80 eb       	ldi	r24, 0xB0	; 176
     410:	f8 01       	movw	r30, r16
			}
			Write_cmd(0b00000001);  // clear display
     412:	80 83       	st	Z, r24
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	9d df       	rcall	.-198    	; 0x352 <Write_cmd>
			// write the text to the display
			for(int k = 0; k < 16; k++)
     418:	00 e0       	ldi	r16, 0x00	; 0
     41a:	10 e0       	ldi	r17, 0x00	; 0
			{
				write_char(recieved[k]);
     41c:	07 c0       	rjmp	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     41e:	f8 01       	movw	r30, r16
     420:	ea 5a       	subi	r30, 0xAA	; 170
     422:	fd 4f       	sbci	r31, 0xFD	; 253
     424:	80 81       	ld	r24, Z
     426:	9b df       	rcall	.-202    	; 0x35e <write_char>
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     428:	0f 5f       	subi	r16, 0xFF	; 255
     42a:	1f 4f       	sbci	r17, 0xFF	; 255
     42c:	00 31       	cpi	r16, 0x10	; 16
     42e:	11 05       	cpc	r17, r1
     430:	b4 f3       	brlt	.-20     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
			{
				write_char(recieved[k]);
			}
			if (logger == 1)
     432:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     436:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	59 f4       	brne	.+22     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
     43e:	01 ec       	ldi	r16, 0xC1	; 193
     440:	10 e0       	ldi	r17, 0x00	; 0
     442:	88 eb       	ldi	r24, 0xB8	; 184
     444:	f8 01       	movw	r30, r16
				send_log_msg(" Msg finished ");
     446:	80 83       	st	Z, r24
     448:	8f e2       	ldi	r24, 0x2F	; 47
     44a:	92 e0       	ldi	r25, 0x02	; 2
     44c:	27 df       	rcall	.-434    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
     44e:	80 eb       	ldi	r24, 0xB0	; 176
     450:	f8 01       	movw	r30, r16
     452:	80 83       	st	Z, r24
			}
			check_index = 0;
			// move cursor to second line ...
			// RS, En = 0
			PORTC = PORTC & ~ (1<<PC0);
     454:	88 b1       	in	r24, 0x08	; 8
     456:	8e 7f       	andi	r24, 0xFE	; 254
     458:	88 b9       	out	0x08, r24	; 8
			PORTC = PORTC & ~ (1<<PC2);
     45a:	88 b1       	in	r24, 0x08	; 8
     45c:	8b 7f       	andi	r24, 0xFB	; 251
     45e:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     460:	ff ef       	ldi	r31, 0xFF	; 255
     462:	23 e2       	ldi	r18, 0x23	; 35
     464:	34 ef       	ldi	r19, 0xF4	; 244
     466:	f1 50       	subi	r31, 0x01	; 1
     468:	20 40       	sbci	r18, 0x00	; 0
     46a:	30 40       	sbci	r19, 0x00	; 0
     46c:	e1 f7       	brne	.-8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
			_delay_ms(5000);
			Write_cmd(0b00000001); // clear display
     46e:	00 c0       	rjmp	.+0      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     470:	00 00       	nop
     472:	81 e0       	ldi	r24, 0x01	; 1
			Write_cmd(0b10000000|0x40);  // move to second line
     474:	6e df       	rcall	.-292    	; 0x352 <Write_cmd>
     476:	80 ec       	ldi	r24, 0xC0	; 192
     478:	6c df       	rcall	.-296    	; 0x352 <Write_cmd>
			// write to second line on LCD
			if (logger == 1)
     47a:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     47e:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     482:	01 97       	sbiw	r24, 0x01	; 1
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
     484:	59 f4       	brne	.+22     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     486:	01 ec       	ldi	r16, 0xC1	; 193
     488:	10 e0       	ldi	r17, 0x00	; 0
     48a:	88 eb       	ldi	r24, 0xB8	; 184
     48c:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
     48e:	80 83       	st	Z, r24
     490:	81 e2       	ldi	r24, 0x21	; 33
     492:	92 e0       	ldi	r25, 0x02	; 2
     494:	03 df       	rcall	.-506    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
     496:	80 eb       	ldi	r24, 0xB0	; 176
     498:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     49a:	80 83       	st	Z, r24
     49c:	00 e0       	ldi	r16, 0x00	; 0
     49e:	10 e0       	ldi	r17, 0x00	; 0
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			// write to the second line
			for(int k = 0; k < 16; k++)
			{
				write_char(recieved[k]);
     4a0:	07 c0       	rjmp	.+14     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     4a2:	f8 01       	movw	r30, r16
     4a4:	ea 5a       	subi	r30, 0xAA	; 170
     4a6:	fd 4f       	sbci	r31, 0xFD	; 253
     4a8:	80 81       	ld	r24, Z
     4aa:	59 df       	rcall	.-334    	; 0x35e <write_char>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			// write to the second line
			for(int k = 0; k < 16; k++)
     4ac:	0f 5f       	subi	r16, 0xFF	; 255
     4ae:	1f 4f       	sbci	r17, 0xFF	; 255
     4b0:	00 31       	cpi	r16, 0x10	; 16
     4b2:	11 05       	cpc	r17, r1
     4b4:	b4 f3       	brlt	.-20     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
			{
				write_char(recieved[k]);
			}
			if (logger == 1)
     4b6:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     4ba:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     4be:	01 97       	sbiw	r24, 0x01	; 1
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
     4c0:	59 f4       	brne	.+22     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     4c2:	01 ec       	ldi	r16, 0xC1	; 193
     4c4:	10 e0       	ldi	r17, 0x00	; 0
     4c6:	88 eb       	ldi	r24, 0xB8	; 184
     4c8:	f8 01       	movw	r30, r16
				send_log_msg(" Msg finished ");
     4ca:	80 83       	st	Z, r24
     4cc:	8f e2       	ldi	r24, 0x2F	; 47
     4ce:	92 e0       	ldi	r25, 0x02	; 2
     4d0:	e5 de       	rcall	.-566    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
     4d2:	80 eb       	ldi	r24, 0xB0	; 176
     4d4:	f8 01       	movw	r30, r16
     4d6:	80 83       	st	Z, r24
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	90 e0       	ldi	r25, 0x00	; 0
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			// clear char list
			for( int i = 0; i < 16; i++)
			{
				recieved[i] = NULL;
     4dc:	05 c0       	rjmp	.+10     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     4de:	fc 01       	movw	r30, r24
     4e0:	ea 5a       	subi	r30, 0xAA	; 170
     4e2:	fd 4f       	sbci	r31, 0xFD	; 253
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0);
				send_log_msg(" Msg finished ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			// clear char list
			for( int i = 0; i < 16; i++)
     4e4:	10 82       	st	Z, r1
     4e6:	01 96       	adiw	r24, 0x01	; 1
     4e8:	80 31       	cpi	r24, 0x10	; 16
     4ea:	91 05       	cpc	r25, r1
			{
				recieved[i] = NULL;
			}
			Write_cmd(0b00000010);  // return home
     4ec:	c4 f3       	brlt	.-16     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     4ee:	82 e0       	ldi	r24, 0x02	; 2
     4f0:	30 df       	rcall	.-416    	; 0x352 <Write_cmd>
     4f2:	6a cf       	rjmp	.-300    	; 0x3c8 <main+0x5e>
			
		} // redo assignment5 ends here
		else if (check_index == 1 ){
     4f4:	41 30       	cpi	r20, 0x01	; 1
     4f6:	51 05       	cpc	r21, r1
     4f8:	09 f0       	breq	.+2      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
     4fa:	c6 c0       	rjmp	.+396    	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
			// Commands 2 starts here
			if (recieved[0]==0b00110010)
     4fc:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <recieved>
     500:	82 33       	cpi	r24, 0x32	; 50
     502:	e9 f4       	brne	.+58     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     504:	01 ec       	ldi	r16, 0xC1	; 193
     506:	10 e0       	ldi	r17, 0x00	; 0
     508:	88 eb       	ldi	r24, 0xB8	; 184
     50a:	f8 01       	movw	r30, r16
				char logon[16] = " logg msgs on ";
     50c:	80 83       	st	Z, r24
     50e:	8f e0       	ldi	r24, 0x0F	; 15
     510:	e1 e1       	ldi	r30, 0x11	; 17
     512:	f2 e0       	ldi	r31, 0x02	; 2
     514:	de 01       	movw	r26, r28
     516:	51 96       	adiw	r26, 0x11	; 17
     518:	01 90       	ld	r0, Z+
     51a:	0d 92       	st	X+, r0
     51c:	8a 95       	dec	r24
     51e:	e1 f7       	brne	.-8      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
				int *y = NULL;
				y = &logon;
				send_log_msg(y);  // send logging message on to the terminal
     520:	18 a2       	std	Y+32, r1	; 0x20
     522:	ce 01       	movw	r24, r28
     524:	41 96       	adiw	r24, 0x11	; 17
     526:	ba de       	rcall	.-652    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     528:	80 eb       	ldi	r24, 0xB0	; 176
     52a:	f8 01       	movw	r30, r16
     52c:	80 83       	st	Z, r24
				recieved[0] = NULL; // clear char list
     52e:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <recieved>
				logger = 1;  // when logger = 1, the logging message is on
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <__data_end+0x1>
     53a:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <__data_end>
			}
			// Commands 2 ends here
			
			// Commands 3 starts here
			if (recieved[0]==0b00110011)
     53e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <recieved>
     542:	83 33       	cpi	r24, 0x33	; 51
     544:	d1 f4       	brne	.+52     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     546:	01 ec       	ldi	r16, 0xC1	; 193
     548:	10 e0       	ldi	r17, 0x00	; 0
     54a:	88 eb       	ldi	r24, 0xB8	; 184
     54c:	f8 01       	movw	r30, r16
				char Logoff[16] = " logg msgs off ";
     54e:	80 83       	st	Z, r24
     550:	80 e1       	ldi	r24, 0x10	; 16
     552:	e2 e4       	ldi	r30, 0x42	; 66
     554:	f2 e0       	ldi	r31, 0x02	; 2
     556:	de 01       	movw	r26, r28
     558:	51 96       	adiw	r26, 0x11	; 17
     55a:	01 90       	ld	r0, Z+
     55c:	0d 92       	st	X+, r0
     55e:	8a 95       	dec	r24
				int *z = NULL;
				z = &Logoff;
				send_log_msg(z); // send logging message off to the terminal
     560:	e1 f7       	brne	.-8      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
     562:	ce 01       	movw	r24, r28
     564:	41 96       	adiw	r24, 0x11	; 17
     566:	9a de       	rcall	.-716    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     568:	80 eb       	ldi	r24, 0xB0	; 176
     56a:	f8 01       	movw	r30, r16
     56c:	80 83       	st	Z, r24
				recieved[0] = NULL; // clear char list
     56e:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <recieved>
				logger = 0; // when logger = 0, the logging message is off
     572:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <__data_end+0x1>
     576:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <__data_end>
			}
			// Commands 3 ends here
			
			// Commands 4 starts here
			if (recieved[0]==0b00110100)
     57a:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <recieved>
     57e:	84 33       	cpi	r24, 0x34	; 52
			{
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     580:	01 f5       	brne	.+64     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
     582:	01 ec       	ldi	r16, 0xC1	; 193
     584:	10 e0       	ldi	r17, 0x00	; 0
     586:	88 eb       	ldi	r24, 0xB8	; 184
				double t = lm35_read_temp();
     588:	f8 01       	movw	r30, r16
				sprintf(str_buffer, "%f ", t);
     58a:	80 83       	st	Z, r24
     58c:	80 de       	rcall	.-768    	; 0x28e <lm35_read_temp>
     58e:	9f 93       	push	r25
     590:	8f 93       	push	r24
     592:	7f 93       	push	r23
     594:	6f 93       	push	r22
     596:	8e e3       	ldi	r24, 0x3E	; 62
     598:	92 e0       	ldi	r25, 0x02	; 2
     59a:	9f 93       	push	r25
     59c:	8f 93       	push	r24
     59e:	86 e6       	ldi	r24, 0x66	; 102
     5a0:	92 e0       	ldi	r25, 0x02	; 2
     5a2:	9f 93       	push	r25
     5a4:	8f 93       	push	r24
				send_log_msg(str_buffer);  // send temperature to the terminal
     5a6:	1f d7       	rcall	.+3646   	; 0x13e6 <sprintf>
     5a8:	86 e6       	ldi	r24, 0x66	; 102
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	77 de       	rcall	.-786    	; 0x29c <send_log_msg>
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     5ae:	80 eb       	ldi	r24, 0xB0	; 176
     5b0:	f8 01       	movw	r30, r16
     5b2:	80 83       	st	Z, r24
				recieved[0] = NULL; // clear char list
     5b4:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <recieved>
     5b8:	0f b6       	in	r0, 0x3f	; 63
     5ba:	f8 94       	cli
			}
			// Commands 4 ends here
			
			// Commands 5 starts here
			if (recieved[0]==0b00110101)
     5bc:	de bf       	out	0x3e, r29	; 62
     5be:	0f be       	out	0x3f, r0	; 63
     5c0:	cd bf       	out	0x3d, r28	; 61
     5c2:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <recieved>
			{
				// output temperature on the display
				PORTC = PORTC & ~ (1<<PC0);
     5c6:	85 33       	cpi	r24, 0x35	; 53
     5c8:	09 f0       	breq	.+2      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5ca:	fe ce       	rjmp	.-516    	; 0x3c8 <main+0x5e>
				PORTC = PORTC & ~ (1<<PC2);
     5cc:	88 b1       	in	r24, 0x08	; 8
     5ce:	8e 7f       	andi	r24, 0xFE	; 254
				Write_cmd(0b00000001); // clear display
     5d0:	88 b9       	out	0x08, r24	; 8
     5d2:	88 b1       	in	r24, 0x08	; 8
     5d4:	8b 7f       	andi	r24, 0xFB	; 251
				Write_cmd(0b00000010); // return home
     5d6:	88 b9       	out	0x08, r24	; 8
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	bb de       	rcall	.-650    	; 0x352 <Write_cmd>
				double t = lm35_read_temp();
     5dc:	82 e0       	ldi	r24, 0x02	; 2
     5de:	b9 de       	rcall	.-654    	; 0x352 <Write_cmd>
				sprintf(str_buffer, "%f ", t);
     5e0:	56 de       	rcall	.-852    	; 0x28e <lm35_read_temp>
     5e2:	9f 93       	push	r25
     5e4:	8f 93       	push	r24
     5e6:	7f 93       	push	r23
     5e8:	6f 93       	push	r22
     5ea:	8e e3       	ldi	r24, 0x3E	; 62
     5ec:	92 e0       	ldi	r25, 0x02	; 2
     5ee:	9f 93       	push	r25
     5f0:	8f 93       	push	r24
     5f2:	86 e6       	ldi	r24, 0x66	; 102
     5f4:	92 e0       	ldi	r25, 0x02	; 2
     5f6:	9f 93       	push	r25
     5f8:	8f 93       	push	r24
			
				if (logger == 1)
     5fa:	f5 d6       	rcall	.+3562   	; 0x13e6 <sprintf>
     5fc:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     600:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     604:	0f b6       	in	r0, 0x3f	; 63
     606:	f8 94       	cli
     608:	de bf       	out	0x3e, r29	; 62
     60a:	0f be       	out	0x3f, r0	; 63
     60c:	cd bf       	out	0x3d, r28	; 61
     60e:	01 97       	sbiw	r24, 0x01	; 1
				{
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     610:	59 f4       	brne	.+22     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
     612:	01 ec       	ldi	r16, 0xC1	; 193
     614:	10 e0       	ldi	r17, 0x00	; 0
     616:	88 eb       	ldi	r24, 0xB8	; 184
					send_log_msg(" Msg started ");
     618:	f8 01       	movw	r30, r16
     61a:	80 83       	st	Z, r24
     61c:	81 e2       	ldi	r24, 0x21	; 33
     61e:	92 e0       	ldi	r25, 0x02	; 2
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     620:	3d de       	rcall	.-902    	; 0x29c <send_log_msg>
     622:	80 eb       	ldi	r24, 0xB0	; 176
     624:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     626:	80 83       	st	Z, r24
     628:	00 e0       	ldi	r16, 0x00	; 0
     62a:	10 e0       	ldi	r17, 0x00	; 0
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
				}
				
				for(int i = 0; i < 16; i++)
				{
					recieved[i] = str_buffer[i];
     62c:	0b c0       	rjmp	.+22     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
     62e:	f8 01       	movw	r30, r16
     630:	ea 59       	subi	r30, 0x9A	; 154
     632:	fd 4f       	sbci	r31, 0xFD	; 253
     634:	80 81       	ld	r24, Z
     636:	f8 01       	movw	r30, r16
     638:	ea 5a       	subi	r30, 0xAA	; 170
					write_char(recieved[i]);
     63a:	fd 4f       	sbci	r31, 0xFD	; 253
     63c:	80 83       	st	Z, r24
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
					send_log_msg(" Msg started ");
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
				}
				
				for(int i = 0; i < 16; i++)
     63e:	8f de       	rcall	.-738    	; 0x35e <write_char>
     640:	0f 5f       	subi	r16, 0xFF	; 255
     642:	1f 4f       	sbci	r17, 0xFF	; 255
     644:	00 31       	cpi	r16, 0x10	; 16
     646:	11 05       	cpc	r17, r1
				{
					recieved[i] = str_buffer[i];
					write_char(recieved[i]);
				}
				
				if (logger == 1)
     648:	94 f3       	brlt	.-28     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
     64a:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     64e:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
				{
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     652:	01 97       	sbiw	r24, 0x01	; 1
     654:	59 f4       	brne	.+22     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
     656:	01 ec       	ldi	r16, 0xC1	; 193
     658:	10 e0       	ldi	r17, 0x00	; 0
     65a:	88 eb       	ldi	r24, 0xB8	; 184
					send_log_msg(" Msg finished ");
     65c:	f8 01       	movw	r30, r16
     65e:	80 83       	st	Z, r24
     660:	8f e2       	ldi	r24, 0x2F	; 47
     662:	92 e0       	ldi	r25, 0x02	; 2
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     664:	1b de       	rcall	.-970    	; 0x29c <send_log_msg>
     666:	80 eb       	ldi	r24, 0xB0	; 176
     668:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     66a:	80 83       	st	Z, r24
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	90 e0       	ldi	r25, 0x00	; 0
				}
				
				// clear display and return home
				for( int i = 0; i < 16; i++)
				{
					recieved[i] = NULL;
     670:	05 c0       	rjmp	.+10     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
     672:	fc 01       	movw	r30, r24
     674:	ea 5a       	subi	r30, 0xAA	; 170
					send_log_msg(" Msg finished ");
					UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
				}
				
				// clear display and return home
				for( int i = 0; i < 16; i++)
     676:	fd 4f       	sbci	r31, 0xFD	; 253
     678:	10 82       	st	Z, r1
     67a:	01 96       	adiw	r24, 0x01	; 1
     67c:	80 31       	cpi	r24, 0x10	; 16
				{
					recieved[i] = NULL;
				}
				Write_cmd(0b00000010);
     67e:	91 05       	cpc	r25, r1
     680:	c4 f3       	brlt	.-16     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
     682:	82 e0       	ldi	r24, 0x02	; 2
     684:	66 de       	rcall	.-820    	; 0x352 <Write_cmd>
				
			}
			// Commands 5 ends here
		}
		
		else if (check_index > 0 )
     686:	a0 ce       	rjmp	.-704    	; 0x3c8 <main+0x5e>
     688:	14 16       	cp	r1, r20
     68a:	15 06       	cpc	r1, r21
     68c:	0c f0       	brlt	.+2      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
		{
			//Command One Code
			if (recieved[0]==0b00110001)  //1
     68e:	9c ce       	rjmp	.-712    	; 0x3c8 <main+0x5e>
     690:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <recieved>
     694:	81 33       	cpi	r24, 0x31	; 49
     696:	09 f0       	breq	.+2      	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
			{
				if (recieved[1]==0b00110000) //0   line 1
     698:	97 ce       	rjmp	.-722    	; 0x3c8 <main+0x5e>
     69a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <recieved+0x1>
     69e:	80 33       	cpi	r24, 0x30	; 48
     6a0:	09 f0       	breq	.+2      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
				{
					Write_cmd(0b00000001); // clear display
     6a2:	48 c0       	rjmp	.+144    	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
     6a4:	81 e0       	ldi	r24, 0x01	; 1
					Write_cmd(0b00000010); // return home
     6a6:	55 de       	rcall	.-854    	; 0x352 <Write_cmd>
     6a8:	82 e0       	ldi	r24, 0x02	; 2
     6aa:	53 de       	rcall	.-858    	; 0x352 <Write_cmd>
     6ac:	ff ef       	ldi	r31, 0xFF	; 255
     6ae:	23 ed       	ldi	r18, 0xD3	; 211
     6b0:	30 e3       	ldi	r19, 0x30	; 48
     6b2:	f1 50       	subi	r31, 0x01	; 1
     6b4:	20 40       	sbci	r18, 0x00	; 0
     6b6:	30 40       	sbci	r19, 0x00	; 0
     6b8:	e1 f7       	brne	.-8      	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
     6ba:	00 c0       	rjmp	.+0      	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
					_delay_ms(1000);
					if (logger == 1)
     6bc:	00 00       	nop
     6be:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     6c2:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     6c6:	01 97       	sbiw	r24, 0x01	; 1
					{
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     6c8:	59 f4       	brne	.+22     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     6ca:	01 ec       	ldi	r16, 0xC1	; 193
     6cc:	10 e0       	ldi	r17, 0x00	; 0
     6ce:	88 eb       	ldi	r24, 0xB8	; 184
     6d0:	f8 01       	movw	r30, r16
						send_log_msg(" Msg started ");
     6d2:	80 83       	st	Z, r24
     6d4:	81 e2       	ldi	r24, 0x21	; 33
     6d6:	92 e0       	ldi	r25, 0x02	; 2
     6d8:	e1 dd       	rcall	.-1086   	; 0x29c <send_log_msg>
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     6da:	80 eb       	ldi	r24, 0xB0	; 176
     6dc:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     6de:	80 83       	st	Z, r24
     6e0:	02 e0       	ldi	r16, 0x02	; 2
     6e2:	10 e0       	ldi	r17, 0x00	; 0
						send_log_msg(" Msg started ");
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					for(int j = 2; j < 16; j++)
					{
						write_char(recieved[j]);
     6e4:	07 c0       	rjmp	.+14     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
     6e6:	f8 01       	movw	r30, r16
     6e8:	ea 5a       	subi	r30, 0xAA	; 170
     6ea:	fd 4f       	sbci	r31, 0xFD	; 253
     6ec:	80 81       	ld	r24, Z
     6ee:	37 de       	rcall	.-914    	; 0x35e <write_char>
					{
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
						send_log_msg(" Msg started ");
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					for(int j = 2; j < 16; j++)
     6f0:	0f 5f       	subi	r16, 0xFF	; 255
     6f2:	1f 4f       	sbci	r17, 0xFF	; 255
     6f4:	00 31       	cpi	r16, 0x10	; 16
     6f6:	11 05       	cpc	r17, r1
     6f8:	b4 f3       	brlt	.-20     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
					{
						write_char(recieved[j]);
					}
					if (logger == 1)
     6fa:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     6fe:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     702:	01 97       	sbiw	r24, 0x01	; 1
					{
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     704:	59 f4       	brne	.+22     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
     706:	01 ec       	ldi	r16, 0xC1	; 193
     708:	10 e0       	ldi	r17, 0x00	; 0
     70a:	88 eb       	ldi	r24, 0xB8	; 184
     70c:	f8 01       	movw	r30, r16
						send_log_msg(" Msg finished ");
     70e:	80 83       	st	Z, r24
     710:	8f e2       	ldi	r24, 0x2F	; 47
     712:	92 e0       	ldi	r25, 0x02	; 2
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     714:	c3 dd       	rcall	.-1146   	; 0x29c <send_log_msg>
     716:	80 eb       	ldi	r24, 0xB0	; 176
     718:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     71a:	80 83       	st	Z, r24
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	90 e0       	ldi	r25, 0x00	; 0
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					// clear char list
					for( int i = 0; i < 16; i++)
					{
						recieved[i] = NULL;
     720:	05 c0       	rjmp	.+10     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
     722:	fc 01       	movw	r30, r24
     724:	ea 5a       	subi	r30, 0xAA	; 170
     726:	fd 4f       	sbci	r31, 0xFD	; 253
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
						send_log_msg(" Msg finished ");
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					// clear char list
					for( int i = 0; i < 16; i++)
     728:	10 82       	st	Z, r1
     72a:	01 96       	adiw	r24, 0x01	; 1
     72c:	80 31       	cpi	r24, 0x10	; 16
     72e:	91 05       	cpc	r25, r1
					{
						recieved[i] = NULL;
					}
				}else if (recieved[1]==0b00110001) //1  line 2
     730:	c4 f3       	brlt	.-16     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
     732:	4a ce       	rjmp	.-876    	; 0x3c8 <main+0x5e>
     734:	81 33       	cpi	r24, 0x31	; 49
				{
					Write_cmd(0b00000001); // clear display
     736:	09 f0       	breq	.+2      	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
     738:	47 ce       	rjmp	.-882    	; 0x3c8 <main+0x5e>
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	0a de       	rcall	.-1004   	; 0x352 <Write_cmd>
     73e:	ff ef       	ldi	r31, 0xFF	; 255
     740:	23 ed       	ldi	r18, 0xD3	; 211
     742:	30 e3       	ldi	r19, 0x30	; 48
     744:	f1 50       	subi	r31, 0x01	; 1
     746:	20 40       	sbci	r18, 0x00	; 0
     748:	30 40       	sbci	r19, 0x00	; 0
     74a:	e1 f7       	brne	.-8      	; 0x744 <__LOCK_REGION_LENGTH__+0x344>
					_delay_ms(1000);
					Write_cmd(0b10000000|0x40); // move to the second line
     74c:	00 c0       	rjmp	.+0      	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
     74e:	00 00       	nop
     750:	80 ec       	ldi	r24, 0xC0	; 192
					if (logger == 1)
     752:	ff dd       	rcall	.-1026   	; 0x352 <Write_cmd>
     754:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     758:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     75c:	01 97       	sbiw	r24, 0x01	; 1
					{
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     75e:	59 f4       	brne	.+22     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     760:	01 ec       	ldi	r16, 0xC1	; 193
     762:	10 e0       	ldi	r17, 0x00	; 0
     764:	88 eb       	ldi	r24, 0xB8	; 184
						send_log_msg(" Msg started ");
     766:	f8 01       	movw	r30, r16
     768:	80 83       	st	Z, r24
     76a:	81 e2       	ldi	r24, 0x21	; 33
     76c:	92 e0       	ldi	r25, 0x02	; 2
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     76e:	96 dd       	rcall	.-1236   	; 0x29c <send_log_msg>
     770:	80 eb       	ldi	r24, 0xB0	; 176
     772:	f8 01       	movw	r30, r16
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     774:	80 83       	st	Z, r24
     776:	02 e0       	ldi	r16, 0x02	; 2
     778:	10 e0       	ldi	r17, 0x00	; 0
						send_log_msg(" Msg started ");
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					for(int k = 2; k < 16; k++)
					{
						write_char(recieved[k]);
     77a:	07 c0       	rjmp	.+14     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
     77c:	f8 01       	movw	r30, r16
     77e:	ea 5a       	subi	r30, 0xAA	; 170
     780:	fd 4f       	sbci	r31, 0xFD	; 253
     782:	80 81       	ld	r24, Z
					{
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
						send_log_msg(" Msg started ");
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					for(int k = 2; k < 16; k++)
     784:	ec dd       	rcall	.-1064   	; 0x35e <write_char>
     786:	0f 5f       	subi	r16, 0xFF	; 255
     788:	1f 4f       	sbci	r17, 0xFF	; 255
     78a:	00 31       	cpi	r16, 0x10	; 16
     78c:	11 05       	cpc	r17, r1
					{
						write_char(recieved[k]);
					}
					if (logger == 1)
     78e:	b4 f3       	brlt	.-20     	; 0x77c <__LOCK_REGION_LENGTH__+0x37c>
     790:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <__data_end>
     794:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <__data_end+0x1>
     798:	01 97       	sbiw	r24, 0x01	; 1
					{
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
     79a:	59 f4       	brne	.+22     	; 0x7b2 <__LOCK_REGION_LENGTH__+0x3b2>
     79c:	01 ec       	ldi	r16, 0xC1	; 193
     79e:	10 e0       	ldi	r17, 0x00	; 0
     7a0:	88 eb       	ldi	r24, 0xB8	; 184
     7a2:	f8 01       	movw	r30, r16
						send_log_msg(" Msg finished ");
     7a4:	80 83       	st	Z, r24
     7a6:	8f e2       	ldi	r24, 0x2F	; 47
     7a8:	92 e0       	ldi	r25, 0x02	; 2
     7aa:	78 dd       	rcall	.-1296   	; 0x29c <send_log_msg>
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
     7ac:	80 eb       	ldi	r24, 0xB0	; 176
     7ae:	f8 01       	movw	r30, r16
     7b0:	80 83       	st	Z, r24
				send_log_msg(" Msg started ");
				UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0);
			}
			Write_cmd(0b00000001);  // clear display
			// write the text to the display
			for(int k = 0; k < 16; k++)
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	05 c0       	rjmp	.+10     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					// clear char list
					for( int i = 0; i < 16; i++)
					{
						recieved[i] = NULL;
     7b8:	fc 01       	movw	r30, r24
     7ba:	ea 5a       	subi	r30, 0xAA	; 170
     7bc:	fd 4f       	sbci	r31, 0xFD	; 253
     7be:	10 82       	st	Z, r1
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(1<<TXEN0); // enable transmitter
						send_log_msg(" Msg finished ");
						UCSR0B = (1<<RXCIE0)|(1<<UDRIE0)|(1<<RXEN0)|(0<<TXEN0); // disable transmitter
					}
					// clear char list
					for( int i = 0; i < 16; i++)
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	80 31       	cpi	r24, 0x10	; 16
     7c4:	91 05       	cpc	r25, r1
     7c6:	c4 f3       	brlt	.-16     	; 0x7b8 <__LOCK_REGION_LENGTH__+0x3b8>
					{
						recieved[i] = NULL;
					}
					Write_cmd(0b00000010);  // return home
     7c8:	82 e0       	ldi	r24, 0x02	; 2
     7ca:	c3 dd       	rcall	.-1146   	; 0x352 <Write_cmd>
     7cc:	fd cd       	rjmp	.-1030   	; 0x3c8 <main+0x5e>

000007ce <__divsf3>:
     7ce:	0c d0       	rcall	.+24     	; 0x7e8 <__divsf3x>
     7d0:	ba c0       	rjmp	.+372    	; 0x946 <__fp_round>
     7d2:	b2 d0       	rcall	.+356    	; 0x938 <__fp_pscB>
     7d4:	40 f0       	brcs	.+16     	; 0x7e6 <__divsf3+0x18>
     7d6:	a9 d0       	rcall	.+338    	; 0x92a <__fp_pscA>
     7d8:	30 f0       	brcs	.+12     	; 0x7e6 <__divsf3+0x18>
     7da:	21 f4       	brne	.+8      	; 0x7e4 <__divsf3+0x16>
     7dc:	5f 3f       	cpi	r21, 0xFF	; 255
     7de:	19 f0       	breq	.+6      	; 0x7e6 <__divsf3+0x18>
     7e0:	9b c0       	rjmp	.+310    	; 0x918 <__fp_inf>
     7e2:	51 11       	cpse	r21, r1
     7e4:	e4 c0       	rjmp	.+456    	; 0x9ae <__fp_szero>
     7e6:	9e c0       	rjmp	.+316    	; 0x924 <__fp_nan>

000007e8 <__divsf3x>:
     7e8:	bf d0       	rcall	.+382    	; 0x968 <__fp_split3>
     7ea:	98 f3       	brcs	.-26     	; 0x7d2 <__divsf3+0x4>

000007ec <__divsf3_pse>:
     7ec:	99 23       	and	r25, r25
     7ee:	c9 f3       	breq	.-14     	; 0x7e2 <__divsf3+0x14>
     7f0:	55 23       	and	r21, r21
     7f2:	b1 f3       	breq	.-20     	; 0x7e0 <__divsf3+0x12>
     7f4:	95 1b       	sub	r25, r21
     7f6:	55 0b       	sbc	r21, r21
     7f8:	bb 27       	eor	r27, r27
     7fa:	aa 27       	eor	r26, r26
     7fc:	62 17       	cp	r22, r18
     7fe:	73 07       	cpc	r23, r19
     800:	84 07       	cpc	r24, r20
     802:	38 f0       	brcs	.+14     	; 0x812 <__divsf3_pse+0x26>
     804:	9f 5f       	subi	r25, 0xFF	; 255
     806:	5f 4f       	sbci	r21, 0xFF	; 255
     808:	22 0f       	add	r18, r18
     80a:	33 1f       	adc	r19, r19
     80c:	44 1f       	adc	r20, r20
     80e:	aa 1f       	adc	r26, r26
     810:	a9 f3       	breq	.-22     	; 0x7fc <__divsf3_pse+0x10>
     812:	33 d0       	rcall	.+102    	; 0x87a <__divsf3_pse+0x8e>
     814:	0e 2e       	mov	r0, r30
     816:	3a f0       	brmi	.+14     	; 0x826 <__divsf3_pse+0x3a>
     818:	e0 e8       	ldi	r30, 0x80	; 128
     81a:	30 d0       	rcall	.+96     	; 0x87c <__divsf3_pse+0x90>
     81c:	91 50       	subi	r25, 0x01	; 1
     81e:	50 40       	sbci	r21, 0x00	; 0
     820:	e6 95       	lsr	r30
     822:	00 1c       	adc	r0, r0
     824:	ca f7       	brpl	.-14     	; 0x818 <__divsf3_pse+0x2c>
     826:	29 d0       	rcall	.+82     	; 0x87a <__divsf3_pse+0x8e>
     828:	fe 2f       	mov	r31, r30
     82a:	27 d0       	rcall	.+78     	; 0x87a <__divsf3_pse+0x8e>
     82c:	66 0f       	add	r22, r22
     82e:	77 1f       	adc	r23, r23
     830:	88 1f       	adc	r24, r24
     832:	bb 1f       	adc	r27, r27
     834:	26 17       	cp	r18, r22
     836:	37 07       	cpc	r19, r23
     838:	48 07       	cpc	r20, r24
     83a:	ab 07       	cpc	r26, r27
     83c:	b0 e8       	ldi	r27, 0x80	; 128
     83e:	09 f0       	breq	.+2      	; 0x842 <__divsf3_pse+0x56>
     840:	bb 0b       	sbc	r27, r27
     842:	80 2d       	mov	r24, r0
     844:	bf 01       	movw	r22, r30
     846:	ff 27       	eor	r31, r31
     848:	93 58       	subi	r25, 0x83	; 131
     84a:	5f 4f       	sbci	r21, 0xFF	; 255
     84c:	2a f0       	brmi	.+10     	; 0x858 <__divsf3_pse+0x6c>
     84e:	9e 3f       	cpi	r25, 0xFE	; 254
     850:	51 05       	cpc	r21, r1
     852:	68 f0       	brcs	.+26     	; 0x86e <__divsf3_pse+0x82>
     854:	61 c0       	rjmp	.+194    	; 0x918 <__fp_inf>
     856:	ab c0       	rjmp	.+342    	; 0x9ae <__fp_szero>
     858:	5f 3f       	cpi	r21, 0xFF	; 255
     85a:	ec f3       	brlt	.-6      	; 0x856 <__divsf3_pse+0x6a>
     85c:	98 3e       	cpi	r25, 0xE8	; 232
     85e:	dc f3       	brlt	.-10     	; 0x856 <__divsf3_pse+0x6a>
     860:	86 95       	lsr	r24
     862:	77 95       	ror	r23
     864:	67 95       	ror	r22
     866:	b7 95       	ror	r27
     868:	f7 95       	ror	r31
     86a:	9f 5f       	subi	r25, 0xFF	; 255
     86c:	c9 f7       	brne	.-14     	; 0x860 <__divsf3_pse+0x74>
     86e:	88 0f       	add	r24, r24
     870:	91 1d       	adc	r25, r1
     872:	96 95       	lsr	r25
     874:	87 95       	ror	r24
     876:	97 f9       	bld	r25, 7
     878:	08 95       	ret
     87a:	e1 e0       	ldi	r30, 0x01	; 1
     87c:	66 0f       	add	r22, r22
     87e:	77 1f       	adc	r23, r23
     880:	88 1f       	adc	r24, r24
     882:	bb 1f       	adc	r27, r27
     884:	62 17       	cp	r22, r18
     886:	73 07       	cpc	r23, r19
     888:	84 07       	cpc	r24, r20
     88a:	ba 07       	cpc	r27, r26
     88c:	20 f0       	brcs	.+8      	; 0x896 <__divsf3_pse+0xaa>
     88e:	62 1b       	sub	r22, r18
     890:	73 0b       	sbc	r23, r19
     892:	84 0b       	sbc	r24, r20
     894:	ba 0b       	sbc	r27, r26
     896:	ee 1f       	adc	r30, r30
     898:	88 f7       	brcc	.-30     	; 0x87c <__divsf3_pse+0x90>
     89a:	e0 95       	com	r30
     89c:	08 95       	ret

0000089e <__floatunsisf>:
     89e:	e8 94       	clt
     8a0:	09 c0       	rjmp	.+18     	; 0x8b4 <__floatsisf+0x12>

000008a2 <__floatsisf>:
     8a2:	97 fb       	bst	r25, 7
     8a4:	3e f4       	brtc	.+14     	; 0x8b4 <__floatsisf+0x12>
     8a6:	90 95       	com	r25
     8a8:	80 95       	com	r24
     8aa:	70 95       	com	r23
     8ac:	61 95       	neg	r22
     8ae:	7f 4f       	sbci	r23, 0xFF	; 255
     8b0:	8f 4f       	sbci	r24, 0xFF	; 255
     8b2:	9f 4f       	sbci	r25, 0xFF	; 255
     8b4:	99 23       	and	r25, r25
     8b6:	a9 f0       	breq	.+42     	; 0x8e2 <__floatsisf+0x40>
     8b8:	f9 2f       	mov	r31, r25
     8ba:	96 e9       	ldi	r25, 0x96	; 150
     8bc:	bb 27       	eor	r27, r27
     8be:	93 95       	inc	r25
     8c0:	f6 95       	lsr	r31
     8c2:	87 95       	ror	r24
     8c4:	77 95       	ror	r23
     8c6:	67 95       	ror	r22
     8c8:	b7 95       	ror	r27
     8ca:	f1 11       	cpse	r31, r1
     8cc:	f8 cf       	rjmp	.-16     	; 0x8be <__floatsisf+0x1c>
     8ce:	fa f4       	brpl	.+62     	; 0x90e <__floatsisf+0x6c>
     8d0:	bb 0f       	add	r27, r27
     8d2:	11 f4       	brne	.+4      	; 0x8d8 <__floatsisf+0x36>
     8d4:	60 ff       	sbrs	r22, 0
     8d6:	1b c0       	rjmp	.+54     	; 0x90e <__floatsisf+0x6c>
     8d8:	6f 5f       	subi	r22, 0xFF	; 255
     8da:	7f 4f       	sbci	r23, 0xFF	; 255
     8dc:	8f 4f       	sbci	r24, 0xFF	; 255
     8de:	9f 4f       	sbci	r25, 0xFF	; 255
     8e0:	16 c0       	rjmp	.+44     	; 0x90e <__floatsisf+0x6c>
     8e2:	88 23       	and	r24, r24
     8e4:	11 f0       	breq	.+4      	; 0x8ea <__floatsisf+0x48>
     8e6:	96 e9       	ldi	r25, 0x96	; 150
     8e8:	11 c0       	rjmp	.+34     	; 0x90c <__floatsisf+0x6a>
     8ea:	77 23       	and	r23, r23
     8ec:	21 f0       	breq	.+8      	; 0x8f6 <__floatsisf+0x54>
     8ee:	9e e8       	ldi	r25, 0x8E	; 142
     8f0:	87 2f       	mov	r24, r23
     8f2:	76 2f       	mov	r23, r22
     8f4:	05 c0       	rjmp	.+10     	; 0x900 <__floatsisf+0x5e>
     8f6:	66 23       	and	r22, r22
     8f8:	71 f0       	breq	.+28     	; 0x916 <__floatsisf+0x74>
     8fa:	96 e8       	ldi	r25, 0x86	; 134
     8fc:	86 2f       	mov	r24, r22
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	2a f0       	brmi	.+10     	; 0x90e <__floatsisf+0x6c>
     904:	9a 95       	dec	r25
     906:	66 0f       	add	r22, r22
     908:	77 1f       	adc	r23, r23
     90a:	88 1f       	adc	r24, r24
     90c:	da f7       	brpl	.-10     	; 0x904 <__floatsisf+0x62>
     90e:	88 0f       	add	r24, r24
     910:	96 95       	lsr	r25
     912:	87 95       	ror	r24
     914:	97 f9       	bld	r25, 7
     916:	08 95       	ret

00000918 <__fp_inf>:
     918:	97 f9       	bld	r25, 7
     91a:	9f 67       	ori	r25, 0x7F	; 127
     91c:	80 e8       	ldi	r24, 0x80	; 128
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	08 95       	ret

00000924 <__fp_nan>:
     924:	9f ef       	ldi	r25, 0xFF	; 255
     926:	80 ec       	ldi	r24, 0xC0	; 192
     928:	08 95       	ret

0000092a <__fp_pscA>:
     92a:	00 24       	eor	r0, r0
     92c:	0a 94       	dec	r0
     92e:	16 16       	cp	r1, r22
     930:	17 06       	cpc	r1, r23
     932:	18 06       	cpc	r1, r24
     934:	09 06       	cpc	r0, r25
     936:	08 95       	ret

00000938 <__fp_pscB>:
     938:	00 24       	eor	r0, r0
     93a:	0a 94       	dec	r0
     93c:	12 16       	cp	r1, r18
     93e:	13 06       	cpc	r1, r19
     940:	14 06       	cpc	r1, r20
     942:	05 06       	cpc	r0, r21
     944:	08 95       	ret

00000946 <__fp_round>:
     946:	09 2e       	mov	r0, r25
     948:	03 94       	inc	r0
     94a:	00 0c       	add	r0, r0
     94c:	11 f4       	brne	.+4      	; 0x952 <__fp_round+0xc>
     94e:	88 23       	and	r24, r24
     950:	52 f0       	brmi	.+20     	; 0x966 <__fp_round+0x20>
     952:	bb 0f       	add	r27, r27
     954:	40 f4       	brcc	.+16     	; 0x966 <__fp_round+0x20>
     956:	bf 2b       	or	r27, r31
     958:	11 f4       	brne	.+4      	; 0x95e <__fp_round+0x18>
     95a:	60 ff       	sbrs	r22, 0
     95c:	04 c0       	rjmp	.+8      	; 0x966 <__fp_round+0x20>
     95e:	6f 5f       	subi	r22, 0xFF	; 255
     960:	7f 4f       	sbci	r23, 0xFF	; 255
     962:	8f 4f       	sbci	r24, 0xFF	; 255
     964:	9f 4f       	sbci	r25, 0xFF	; 255
     966:	08 95       	ret

00000968 <__fp_split3>:
     968:	57 fd       	sbrc	r21, 7
     96a:	90 58       	subi	r25, 0x80	; 128
     96c:	44 0f       	add	r20, r20
     96e:	55 1f       	adc	r21, r21
     970:	59 f0       	breq	.+22     	; 0x988 <__fp_splitA+0x10>
     972:	5f 3f       	cpi	r21, 0xFF	; 255
     974:	71 f0       	breq	.+28     	; 0x992 <__fp_splitA+0x1a>
     976:	47 95       	ror	r20

00000978 <__fp_splitA>:
     978:	88 0f       	add	r24, r24
     97a:	97 fb       	bst	r25, 7
     97c:	99 1f       	adc	r25, r25
     97e:	61 f0       	breq	.+24     	; 0x998 <__fp_splitA+0x20>
     980:	9f 3f       	cpi	r25, 0xFF	; 255
     982:	79 f0       	breq	.+30     	; 0x9a2 <__fp_splitA+0x2a>
     984:	87 95       	ror	r24
     986:	08 95       	ret
     988:	12 16       	cp	r1, r18
     98a:	13 06       	cpc	r1, r19
     98c:	14 06       	cpc	r1, r20
     98e:	55 1f       	adc	r21, r21
     990:	f2 cf       	rjmp	.-28     	; 0x976 <__fp_split3+0xe>
     992:	46 95       	lsr	r20
     994:	f1 df       	rcall	.-30     	; 0x978 <__fp_splitA>
     996:	08 c0       	rjmp	.+16     	; 0x9a8 <__fp_splitA+0x30>
     998:	16 16       	cp	r1, r22
     99a:	17 06       	cpc	r1, r23
     99c:	18 06       	cpc	r1, r24
     99e:	99 1f       	adc	r25, r25
     9a0:	f1 cf       	rjmp	.-30     	; 0x984 <__fp_splitA+0xc>
     9a2:	86 95       	lsr	r24
     9a4:	71 05       	cpc	r23, r1
     9a6:	61 05       	cpc	r22, r1
     9a8:	08 94       	sec
     9aa:	08 95       	ret

000009ac <__fp_zero>:
     9ac:	e8 94       	clt

000009ae <__fp_szero>:
     9ae:	bb 27       	eor	r27, r27
     9b0:	66 27       	eor	r22, r22
     9b2:	77 27       	eor	r23, r23
     9b4:	cb 01       	movw	r24, r22
     9b6:	97 f9       	bld	r25, 7
     9b8:	08 95       	ret

000009ba <__mulsf3>:
     9ba:	0b d0       	rcall	.+22     	; 0x9d2 <__mulsf3x>
     9bc:	c4 cf       	rjmp	.-120    	; 0x946 <__fp_round>
     9be:	b5 df       	rcall	.-150    	; 0x92a <__fp_pscA>
     9c0:	28 f0       	brcs	.+10     	; 0x9cc <__mulsf3+0x12>
     9c2:	ba df       	rcall	.-140    	; 0x938 <__fp_pscB>
     9c4:	18 f0       	brcs	.+6      	; 0x9cc <__mulsf3+0x12>
     9c6:	95 23       	and	r25, r21
     9c8:	09 f0       	breq	.+2      	; 0x9cc <__mulsf3+0x12>
     9ca:	a6 cf       	rjmp	.-180    	; 0x918 <__fp_inf>
     9cc:	ab cf       	rjmp	.-170    	; 0x924 <__fp_nan>
     9ce:	11 24       	eor	r1, r1
     9d0:	ee cf       	rjmp	.-36     	; 0x9ae <__fp_szero>

000009d2 <__mulsf3x>:
     9d2:	ca df       	rcall	.-108    	; 0x968 <__fp_split3>
     9d4:	a0 f3       	brcs	.-24     	; 0x9be <__mulsf3+0x4>

000009d6 <__mulsf3_pse>:
     9d6:	95 9f       	mul	r25, r21
     9d8:	d1 f3       	breq	.-12     	; 0x9ce <__mulsf3+0x14>
     9da:	95 0f       	add	r25, r21
     9dc:	50 e0       	ldi	r21, 0x00	; 0
     9de:	55 1f       	adc	r21, r21
     9e0:	62 9f       	mul	r22, r18
     9e2:	f0 01       	movw	r30, r0
     9e4:	72 9f       	mul	r23, r18
     9e6:	bb 27       	eor	r27, r27
     9e8:	f0 0d       	add	r31, r0
     9ea:	b1 1d       	adc	r27, r1
     9ec:	63 9f       	mul	r22, r19
     9ee:	aa 27       	eor	r26, r26
     9f0:	f0 0d       	add	r31, r0
     9f2:	b1 1d       	adc	r27, r1
     9f4:	aa 1f       	adc	r26, r26
     9f6:	64 9f       	mul	r22, r20
     9f8:	66 27       	eor	r22, r22
     9fa:	b0 0d       	add	r27, r0
     9fc:	a1 1d       	adc	r26, r1
     9fe:	66 1f       	adc	r22, r22
     a00:	82 9f       	mul	r24, r18
     a02:	22 27       	eor	r18, r18
     a04:	b0 0d       	add	r27, r0
     a06:	a1 1d       	adc	r26, r1
     a08:	62 1f       	adc	r22, r18
     a0a:	73 9f       	mul	r23, r19
     a0c:	b0 0d       	add	r27, r0
     a0e:	a1 1d       	adc	r26, r1
     a10:	62 1f       	adc	r22, r18
     a12:	83 9f       	mul	r24, r19
     a14:	a0 0d       	add	r26, r0
     a16:	61 1d       	adc	r22, r1
     a18:	22 1f       	adc	r18, r18
     a1a:	74 9f       	mul	r23, r20
     a1c:	33 27       	eor	r19, r19
     a1e:	a0 0d       	add	r26, r0
     a20:	61 1d       	adc	r22, r1
     a22:	23 1f       	adc	r18, r19
     a24:	84 9f       	mul	r24, r20
     a26:	60 0d       	add	r22, r0
     a28:	21 1d       	adc	r18, r1
     a2a:	82 2f       	mov	r24, r18
     a2c:	76 2f       	mov	r23, r22
     a2e:	6a 2f       	mov	r22, r26
     a30:	11 24       	eor	r1, r1
     a32:	9f 57       	subi	r25, 0x7F	; 127
     a34:	50 40       	sbci	r21, 0x00	; 0
     a36:	8a f0       	brmi	.+34     	; 0xa5a <__mulsf3_pse+0x84>
     a38:	e1 f0       	breq	.+56     	; 0xa72 <__mulsf3_pse+0x9c>
     a3a:	88 23       	and	r24, r24
     a3c:	4a f0       	brmi	.+18     	; 0xa50 <__mulsf3_pse+0x7a>
     a3e:	ee 0f       	add	r30, r30
     a40:	ff 1f       	adc	r31, r31
     a42:	bb 1f       	adc	r27, r27
     a44:	66 1f       	adc	r22, r22
     a46:	77 1f       	adc	r23, r23
     a48:	88 1f       	adc	r24, r24
     a4a:	91 50       	subi	r25, 0x01	; 1
     a4c:	50 40       	sbci	r21, 0x00	; 0
     a4e:	a9 f7       	brne	.-22     	; 0xa3a <__mulsf3_pse+0x64>
     a50:	9e 3f       	cpi	r25, 0xFE	; 254
     a52:	51 05       	cpc	r21, r1
     a54:	70 f0       	brcs	.+28     	; 0xa72 <__mulsf3_pse+0x9c>
     a56:	60 cf       	rjmp	.-320    	; 0x918 <__fp_inf>
     a58:	aa cf       	rjmp	.-172    	; 0x9ae <__fp_szero>
     a5a:	5f 3f       	cpi	r21, 0xFF	; 255
     a5c:	ec f3       	brlt	.-6      	; 0xa58 <__mulsf3_pse+0x82>
     a5e:	98 3e       	cpi	r25, 0xE8	; 232
     a60:	dc f3       	brlt	.-10     	; 0xa58 <__mulsf3_pse+0x82>
     a62:	86 95       	lsr	r24
     a64:	77 95       	ror	r23
     a66:	67 95       	ror	r22
     a68:	b7 95       	ror	r27
     a6a:	f7 95       	ror	r31
     a6c:	e7 95       	ror	r30
     a6e:	9f 5f       	subi	r25, 0xFF	; 255
     a70:	c1 f7       	brne	.-16     	; 0xa62 <__mulsf3_pse+0x8c>
     a72:	fe 2b       	or	r31, r30
     a74:	88 0f       	add	r24, r24
     a76:	91 1d       	adc	r25, r1
     a78:	96 95       	lsr	r25
     a7a:	87 95       	ror	r24
     a7c:	97 f9       	bld	r25, 7
     a7e:	08 95       	ret

00000a80 <vfprintf>:
     a80:	2f 92       	push	r2
     a82:	3f 92       	push	r3
     a84:	4f 92       	push	r4
     a86:	5f 92       	push	r5
     a88:	6f 92       	push	r6
     a8a:	7f 92       	push	r7
     a8c:	8f 92       	push	r8
     a8e:	9f 92       	push	r9
     a90:	af 92       	push	r10
     a92:	bf 92       	push	r11
     a94:	cf 92       	push	r12
     a96:	df 92       	push	r13
     a98:	ef 92       	push	r14
     a9a:	ff 92       	push	r15
     a9c:	0f 93       	push	r16
     a9e:	1f 93       	push	r17
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	cd b7       	in	r28, 0x3d	; 61
     aa6:	de b7       	in	r29, 0x3e	; 62
     aa8:	60 97       	sbiw	r28, 0x10	; 16
     aaa:	0f b6       	in	r0, 0x3f	; 63
     aac:	f8 94       	cli
     aae:	de bf       	out	0x3e, r29	; 62
     ab0:	0f be       	out	0x3f, r0	; 63
     ab2:	cd bf       	out	0x3d, r28	; 61
     ab4:	7c 01       	movw	r14, r24
     ab6:	1b 01       	movw	r2, r22
     ab8:	6a 01       	movw	r12, r20
     aba:	fc 01       	movw	r30, r24
     abc:	17 82       	std	Z+7, r1	; 0x07
     abe:	16 82       	std	Z+6, r1	; 0x06
     ac0:	83 81       	ldd	r24, Z+3	; 0x03
     ac2:	81 ff       	sbrs	r24, 1
     ac4:	2a c3       	rjmp	.+1620   	; 0x111a <__EEPROM_REGION_LENGTH__+0x11a>
     ac6:	9e 01       	movw	r18, r28
     ac8:	2f 5f       	subi	r18, 0xFF	; 255
     aca:	3f 4f       	sbci	r19, 0xFF	; 255
     acc:	39 01       	movw	r6, r18
     ace:	f7 01       	movw	r30, r14
     ad0:	93 81       	ldd	r25, Z+3	; 0x03
     ad2:	f1 01       	movw	r30, r2
     ad4:	93 fd       	sbrc	r25, 3
     ad6:	85 91       	lpm	r24, Z+
     ad8:	93 ff       	sbrs	r25, 3
     ada:	81 91       	ld	r24, Z+
     adc:	1f 01       	movw	r2, r30
     ade:	88 23       	and	r24, r24
     ae0:	09 f4       	brne	.+2      	; 0xae4 <vfprintf+0x64>
     ae2:	17 c3       	rjmp	.+1582   	; 0x1112 <__EEPROM_REGION_LENGTH__+0x112>
     ae4:	85 32       	cpi	r24, 0x25	; 37
     ae6:	39 f4       	brne	.+14     	; 0xaf6 <vfprintf+0x76>
     ae8:	93 fd       	sbrc	r25, 3
     aea:	85 91       	lpm	r24, Z+
     aec:	93 ff       	sbrs	r25, 3
     aee:	81 91       	ld	r24, Z+
     af0:	1f 01       	movw	r2, r30
     af2:	85 32       	cpi	r24, 0x25	; 37
     af4:	31 f4       	brne	.+12     	; 0xb02 <vfprintf+0x82>
     af6:	b7 01       	movw	r22, r14
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	39 d4       	rcall	.+2162   	; 0x136e <fputc>
     afc:	56 01       	movw	r10, r12
     afe:	65 01       	movw	r12, r10
     b00:	e6 cf       	rjmp	.-52     	; 0xace <vfprintf+0x4e>
     b02:	10 e0       	ldi	r17, 0x00	; 0
     b04:	51 2c       	mov	r5, r1
     b06:	91 2c       	mov	r9, r1
     b08:	ff e1       	ldi	r31, 0x1F	; 31
     b0a:	f9 15       	cp	r31, r9
     b0c:	d8 f0       	brcs	.+54     	; 0xb44 <vfprintf+0xc4>
     b0e:	8b 32       	cpi	r24, 0x2B	; 43
     b10:	79 f0       	breq	.+30     	; 0xb30 <vfprintf+0xb0>
     b12:	38 f4       	brcc	.+14     	; 0xb22 <vfprintf+0xa2>
     b14:	80 32       	cpi	r24, 0x20	; 32
     b16:	79 f0       	breq	.+30     	; 0xb36 <vfprintf+0xb6>
     b18:	83 32       	cpi	r24, 0x23	; 35
     b1a:	a1 f4       	brne	.+40     	; 0xb44 <vfprintf+0xc4>
     b1c:	f9 2d       	mov	r31, r9
     b1e:	f0 61       	ori	r31, 0x10	; 16
     b20:	2e c0       	rjmp	.+92     	; 0xb7e <vfprintf+0xfe>
     b22:	8d 32       	cpi	r24, 0x2D	; 45
     b24:	61 f0       	breq	.+24     	; 0xb3e <vfprintf+0xbe>
     b26:	80 33       	cpi	r24, 0x30	; 48
     b28:	69 f4       	brne	.+26     	; 0xb44 <vfprintf+0xc4>
     b2a:	29 2d       	mov	r18, r9
     b2c:	21 60       	ori	r18, 0x01	; 1
     b2e:	2d c0       	rjmp	.+90     	; 0xb8a <vfprintf+0x10a>
     b30:	39 2d       	mov	r19, r9
     b32:	32 60       	ori	r19, 0x02	; 2
     b34:	93 2e       	mov	r9, r19
     b36:	89 2d       	mov	r24, r9
     b38:	84 60       	ori	r24, 0x04	; 4
     b3a:	98 2e       	mov	r9, r24
     b3c:	2a c0       	rjmp	.+84     	; 0xb92 <vfprintf+0x112>
     b3e:	e9 2d       	mov	r30, r9
     b40:	e8 60       	ori	r30, 0x08	; 8
     b42:	15 c0       	rjmp	.+42     	; 0xb6e <vfprintf+0xee>
     b44:	97 fc       	sbrc	r9, 7
     b46:	2d c0       	rjmp	.+90     	; 0xba2 <vfprintf+0x122>
     b48:	20 ed       	ldi	r18, 0xD0	; 208
     b4a:	28 0f       	add	r18, r24
     b4c:	2a 30       	cpi	r18, 0x0A	; 10
     b4e:	88 f4       	brcc	.+34     	; 0xb72 <vfprintf+0xf2>
     b50:	96 fe       	sbrs	r9, 6
     b52:	06 c0       	rjmp	.+12     	; 0xb60 <vfprintf+0xe0>
     b54:	3a e0       	ldi	r19, 0x0A	; 10
     b56:	13 9f       	mul	r17, r19
     b58:	20 0d       	add	r18, r0
     b5a:	11 24       	eor	r1, r1
     b5c:	12 2f       	mov	r17, r18
     b5e:	19 c0       	rjmp	.+50     	; 0xb92 <vfprintf+0x112>
     b60:	8a e0       	ldi	r24, 0x0A	; 10
     b62:	58 9e       	mul	r5, r24
     b64:	20 0d       	add	r18, r0
     b66:	11 24       	eor	r1, r1
     b68:	52 2e       	mov	r5, r18
     b6a:	e9 2d       	mov	r30, r9
     b6c:	e0 62       	ori	r30, 0x20	; 32
     b6e:	9e 2e       	mov	r9, r30
     b70:	10 c0       	rjmp	.+32     	; 0xb92 <vfprintf+0x112>
     b72:	8e 32       	cpi	r24, 0x2E	; 46
     b74:	31 f4       	brne	.+12     	; 0xb82 <vfprintf+0x102>
     b76:	96 fc       	sbrc	r9, 6
     b78:	cc c2       	rjmp	.+1432   	; 0x1112 <__EEPROM_REGION_LENGTH__+0x112>
     b7a:	f9 2d       	mov	r31, r9
     b7c:	f0 64       	ori	r31, 0x40	; 64
     b7e:	9f 2e       	mov	r9, r31
     b80:	08 c0       	rjmp	.+16     	; 0xb92 <vfprintf+0x112>
     b82:	8c 36       	cpi	r24, 0x6C	; 108
     b84:	21 f4       	brne	.+8      	; 0xb8e <vfprintf+0x10e>
     b86:	29 2d       	mov	r18, r9
     b88:	20 68       	ori	r18, 0x80	; 128
     b8a:	92 2e       	mov	r9, r18
     b8c:	02 c0       	rjmp	.+4      	; 0xb92 <vfprintf+0x112>
     b8e:	88 36       	cpi	r24, 0x68	; 104
     b90:	41 f4       	brne	.+16     	; 0xba2 <vfprintf+0x122>
     b92:	f1 01       	movw	r30, r2
     b94:	93 fd       	sbrc	r25, 3
     b96:	85 91       	lpm	r24, Z+
     b98:	93 ff       	sbrs	r25, 3
     b9a:	81 91       	ld	r24, Z+
     b9c:	1f 01       	movw	r2, r30
     b9e:	81 11       	cpse	r24, r1
     ba0:	b3 cf       	rjmp	.-154    	; 0xb08 <vfprintf+0x88>
     ba2:	9b eb       	ldi	r25, 0xBB	; 187
     ba4:	98 0f       	add	r25, r24
     ba6:	93 30       	cpi	r25, 0x03	; 3
     ba8:	20 f4       	brcc	.+8      	; 0xbb2 <vfprintf+0x132>
     baa:	99 2d       	mov	r25, r9
     bac:	90 61       	ori	r25, 0x10	; 16
     bae:	80 5e       	subi	r24, 0xE0	; 224
     bb0:	07 c0       	rjmp	.+14     	; 0xbc0 <vfprintf+0x140>
     bb2:	9b e9       	ldi	r25, 0x9B	; 155
     bb4:	98 0f       	add	r25, r24
     bb6:	93 30       	cpi	r25, 0x03	; 3
     bb8:	08 f0       	brcs	.+2      	; 0xbbc <vfprintf+0x13c>
     bba:	59 c1       	rjmp	.+690    	; 0xe6e <vfprintf+0x3ee>
     bbc:	99 2d       	mov	r25, r9
     bbe:	9f 7e       	andi	r25, 0xEF	; 239
     bc0:	96 ff       	sbrs	r25, 6
     bc2:	16 e0       	ldi	r17, 0x06	; 6
     bc4:	9f 73       	andi	r25, 0x3F	; 63
     bc6:	99 2e       	mov	r9, r25
     bc8:	85 36       	cpi	r24, 0x65	; 101
     bca:	19 f4       	brne	.+6      	; 0xbd2 <vfprintf+0x152>
     bcc:	90 64       	ori	r25, 0x40	; 64
     bce:	99 2e       	mov	r9, r25
     bd0:	08 c0       	rjmp	.+16     	; 0xbe2 <vfprintf+0x162>
     bd2:	86 36       	cpi	r24, 0x66	; 102
     bd4:	21 f4       	brne	.+8      	; 0xbde <vfprintf+0x15e>
     bd6:	39 2f       	mov	r19, r25
     bd8:	30 68       	ori	r19, 0x80	; 128
     bda:	93 2e       	mov	r9, r19
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <vfprintf+0x162>
     bde:	11 11       	cpse	r17, r1
     be0:	11 50       	subi	r17, 0x01	; 1
     be2:	97 fe       	sbrs	r9, 7
     be4:	07 c0       	rjmp	.+14     	; 0xbf4 <vfprintf+0x174>
     be6:	1c 33       	cpi	r17, 0x3C	; 60
     be8:	50 f4       	brcc	.+20     	; 0xbfe <vfprintf+0x17e>
     bea:	44 24       	eor	r4, r4
     bec:	43 94       	inc	r4
     bee:	41 0e       	add	r4, r17
     bf0:	27 e0       	ldi	r18, 0x07	; 7
     bf2:	0b c0       	rjmp	.+22     	; 0xc0a <vfprintf+0x18a>
     bf4:	18 30       	cpi	r17, 0x08	; 8
     bf6:	38 f0       	brcs	.+14     	; 0xc06 <vfprintf+0x186>
     bf8:	27 e0       	ldi	r18, 0x07	; 7
     bfa:	17 e0       	ldi	r17, 0x07	; 7
     bfc:	05 c0       	rjmp	.+10     	; 0xc08 <vfprintf+0x188>
     bfe:	27 e0       	ldi	r18, 0x07	; 7
     c00:	9c e3       	ldi	r25, 0x3C	; 60
     c02:	49 2e       	mov	r4, r25
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <vfprintf+0x18a>
     c06:	21 2f       	mov	r18, r17
     c08:	41 2c       	mov	r4, r1
     c0a:	56 01       	movw	r10, r12
     c0c:	84 e0       	ldi	r24, 0x04	; 4
     c0e:	a8 0e       	add	r10, r24
     c10:	b1 1c       	adc	r11, r1
     c12:	f6 01       	movw	r30, r12
     c14:	60 81       	ld	r22, Z
     c16:	71 81       	ldd	r23, Z+1	; 0x01
     c18:	82 81       	ldd	r24, Z+2	; 0x02
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	04 2d       	mov	r16, r4
     c1e:	a3 01       	movw	r20, r6
     c20:	b8 d2       	rcall	.+1392   	; 0x1192 <__ftoa_engine>
     c22:	6c 01       	movw	r12, r24
     c24:	f9 81       	ldd	r31, Y+1	; 0x01
     c26:	fc 87       	std	Y+12, r31	; 0x0c
     c28:	f0 ff       	sbrs	r31, 0
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <vfprintf+0x1b0>
     c2c:	f3 ff       	sbrs	r31, 3
     c2e:	06 c0       	rjmp	.+12     	; 0xc3c <vfprintf+0x1bc>
     c30:	91 fc       	sbrc	r9, 1
     c32:	06 c0       	rjmp	.+12     	; 0xc40 <vfprintf+0x1c0>
     c34:	92 fe       	sbrs	r9, 2
     c36:	06 c0       	rjmp	.+12     	; 0xc44 <vfprintf+0x1c4>
     c38:	00 e2       	ldi	r16, 0x20	; 32
     c3a:	05 c0       	rjmp	.+10     	; 0xc46 <vfprintf+0x1c6>
     c3c:	0d e2       	ldi	r16, 0x2D	; 45
     c3e:	03 c0       	rjmp	.+6      	; 0xc46 <vfprintf+0x1c6>
     c40:	0b e2       	ldi	r16, 0x2B	; 43
     c42:	01 c0       	rjmp	.+2      	; 0xc46 <vfprintf+0x1c6>
     c44:	00 e0       	ldi	r16, 0x00	; 0
     c46:	8c 85       	ldd	r24, Y+12	; 0x0c
     c48:	8c 70       	andi	r24, 0x0C	; 12
     c4a:	19 f0       	breq	.+6      	; 0xc52 <vfprintf+0x1d2>
     c4c:	01 11       	cpse	r16, r1
     c4e:	43 c2       	rjmp	.+1158   	; 0x10d6 <__EEPROM_REGION_LENGTH__+0xd6>
     c50:	80 c2       	rjmp	.+1280   	; 0x1152 <__EEPROM_REGION_LENGTH__+0x152>
     c52:	97 fe       	sbrs	r9, 7
     c54:	10 c0       	rjmp	.+32     	; 0xc76 <vfprintf+0x1f6>
     c56:	4c 0c       	add	r4, r12
     c58:	fc 85       	ldd	r31, Y+12	; 0x0c
     c5a:	f4 ff       	sbrs	r31, 4
     c5c:	04 c0       	rjmp	.+8      	; 0xc66 <vfprintf+0x1e6>
     c5e:	8a 81       	ldd	r24, Y+2	; 0x02
     c60:	81 33       	cpi	r24, 0x31	; 49
     c62:	09 f4       	brne	.+2      	; 0xc66 <vfprintf+0x1e6>
     c64:	4a 94       	dec	r4
     c66:	14 14       	cp	r1, r4
     c68:	74 f5       	brge	.+92     	; 0xcc6 <vfprintf+0x246>
     c6a:	28 e0       	ldi	r18, 0x08	; 8
     c6c:	24 15       	cp	r18, r4
     c6e:	78 f5       	brcc	.+94     	; 0xcce <vfprintf+0x24e>
     c70:	88 e0       	ldi	r24, 0x08	; 8
     c72:	48 2e       	mov	r4, r24
     c74:	2c c0       	rjmp	.+88     	; 0xcce <vfprintf+0x24e>
     c76:	96 fc       	sbrc	r9, 6
     c78:	2a c0       	rjmp	.+84     	; 0xcce <vfprintf+0x24e>
     c7a:	81 2f       	mov	r24, r17
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	8c 15       	cp	r24, r12
     c80:	9d 05       	cpc	r25, r13
     c82:	9c f0       	brlt	.+38     	; 0xcaa <vfprintf+0x22a>
     c84:	3c ef       	ldi	r19, 0xFC	; 252
     c86:	c3 16       	cp	r12, r19
     c88:	3f ef       	ldi	r19, 0xFF	; 255
     c8a:	d3 06       	cpc	r13, r19
     c8c:	74 f0       	brlt	.+28     	; 0xcaa <vfprintf+0x22a>
     c8e:	89 2d       	mov	r24, r9
     c90:	80 68       	ori	r24, 0x80	; 128
     c92:	98 2e       	mov	r9, r24
     c94:	0a c0       	rjmp	.+20     	; 0xcaa <vfprintf+0x22a>
     c96:	e2 e0       	ldi	r30, 0x02	; 2
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	ec 0f       	add	r30, r28
     c9c:	fd 1f       	adc	r31, r29
     c9e:	e1 0f       	add	r30, r17
     ca0:	f1 1d       	adc	r31, r1
     ca2:	80 81       	ld	r24, Z
     ca4:	80 33       	cpi	r24, 0x30	; 48
     ca6:	19 f4       	brne	.+6      	; 0xcae <vfprintf+0x22e>
     ca8:	11 50       	subi	r17, 0x01	; 1
     caa:	11 11       	cpse	r17, r1
     cac:	f4 cf       	rjmp	.-24     	; 0xc96 <vfprintf+0x216>
     cae:	97 fe       	sbrs	r9, 7
     cb0:	0e c0       	rjmp	.+28     	; 0xcce <vfprintf+0x24e>
     cb2:	44 24       	eor	r4, r4
     cb4:	43 94       	inc	r4
     cb6:	41 0e       	add	r4, r17
     cb8:	81 2f       	mov	r24, r17
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	c8 16       	cp	r12, r24
     cbe:	d9 06       	cpc	r13, r25
     cc0:	2c f4       	brge	.+10     	; 0xccc <vfprintf+0x24c>
     cc2:	1c 19       	sub	r17, r12
     cc4:	04 c0       	rjmp	.+8      	; 0xcce <vfprintf+0x24e>
     cc6:	44 24       	eor	r4, r4
     cc8:	43 94       	inc	r4
     cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x24e>
     ccc:	10 e0       	ldi	r17, 0x00	; 0
     cce:	97 fe       	sbrs	r9, 7
     cd0:	06 c0       	rjmp	.+12     	; 0xcde <vfprintf+0x25e>
     cd2:	1c 14       	cp	r1, r12
     cd4:	1d 04       	cpc	r1, r13
     cd6:	34 f4       	brge	.+12     	; 0xce4 <vfprintf+0x264>
     cd8:	c6 01       	movw	r24, r12
     cda:	01 96       	adiw	r24, 0x01	; 1
     cdc:	05 c0       	rjmp	.+10     	; 0xce8 <vfprintf+0x268>
     cde:	85 e0       	ldi	r24, 0x05	; 5
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	02 c0       	rjmp	.+4      	; 0xce8 <vfprintf+0x268>
     ce4:	81 e0       	ldi	r24, 0x01	; 1
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	01 11       	cpse	r16, r1
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	11 23       	and	r17, r17
     cee:	31 f0       	breq	.+12     	; 0xcfc <vfprintf+0x27c>
     cf0:	21 2f       	mov	r18, r17
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	2f 5f       	subi	r18, 0xFF	; 255
     cf6:	3f 4f       	sbci	r19, 0xFF	; 255
     cf8:	82 0f       	add	r24, r18
     cfa:	93 1f       	adc	r25, r19
     cfc:	25 2d       	mov	r18, r5
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	82 17       	cp	r24, r18
     d02:	93 07       	cpc	r25, r19
     d04:	14 f4       	brge	.+4      	; 0xd0a <vfprintf+0x28a>
     d06:	58 1a       	sub	r5, r24
     d08:	01 c0       	rjmp	.+2      	; 0xd0c <vfprintf+0x28c>
     d0a:	51 2c       	mov	r5, r1
     d0c:	89 2d       	mov	r24, r9
     d0e:	89 70       	andi	r24, 0x09	; 9
     d10:	41 f4       	brne	.+16     	; 0xd22 <vfprintf+0x2a2>
     d12:	55 20       	and	r5, r5
     d14:	31 f0       	breq	.+12     	; 0xd22 <vfprintf+0x2a2>
     d16:	b7 01       	movw	r22, r14
     d18:	80 e2       	ldi	r24, 0x20	; 32
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	28 d3       	rcall	.+1616   	; 0x136e <fputc>
     d1e:	5a 94       	dec	r5
     d20:	f8 cf       	rjmp	.-16     	; 0xd12 <vfprintf+0x292>
     d22:	00 23       	and	r16, r16
     d24:	21 f0       	breq	.+8      	; 0xd2e <vfprintf+0x2ae>
     d26:	b7 01       	movw	r22, r14
     d28:	80 2f       	mov	r24, r16
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	20 d3       	rcall	.+1600   	; 0x136e <fputc>
     d2e:	93 fc       	sbrc	r9, 3
     d30:	08 c0       	rjmp	.+16     	; 0xd42 <vfprintf+0x2c2>
     d32:	55 20       	and	r5, r5
     d34:	31 f0       	breq	.+12     	; 0xd42 <vfprintf+0x2c2>
     d36:	b7 01       	movw	r22, r14
     d38:	80 e3       	ldi	r24, 0x30	; 48
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	18 d3       	rcall	.+1584   	; 0x136e <fputc>
     d3e:	5a 94       	dec	r5
     d40:	f8 cf       	rjmp	.-16     	; 0xd32 <vfprintf+0x2b2>
     d42:	97 fe       	sbrs	r9, 7
     d44:	4a c0       	rjmp	.+148    	; 0xdda <vfprintf+0x35a>
     d46:	46 01       	movw	r8, r12
     d48:	d7 fe       	sbrs	r13, 7
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x2d0>
     d4c:	81 2c       	mov	r8, r1
     d4e:	91 2c       	mov	r9, r1
     d50:	c6 01       	movw	r24, r12
     d52:	88 19       	sub	r24, r8
     d54:	99 09       	sbc	r25, r9
     d56:	f3 01       	movw	r30, r6
     d58:	e8 0f       	add	r30, r24
     d5a:	f9 1f       	adc	r31, r25
     d5c:	fe 87       	std	Y+14, r31	; 0x0e
     d5e:	ed 87       	std	Y+13, r30	; 0x0d
     d60:	96 01       	movw	r18, r12
     d62:	24 19       	sub	r18, r4
     d64:	31 09       	sbc	r19, r1
     d66:	38 8b       	std	Y+16, r19	; 0x10
     d68:	2f 87       	std	Y+15, r18	; 0x0f
     d6a:	01 2f       	mov	r16, r17
     d6c:	10 e0       	ldi	r17, 0x00	; 0
     d6e:	11 95       	neg	r17
     d70:	01 95       	neg	r16
     d72:	11 09       	sbc	r17, r1
     d74:	3f ef       	ldi	r19, 0xFF	; 255
     d76:	83 16       	cp	r8, r19
     d78:	93 06       	cpc	r9, r19
     d7a:	21 f4       	brne	.+8      	; 0xd84 <vfprintf+0x304>
     d7c:	b7 01       	movw	r22, r14
     d7e:	8e e2       	ldi	r24, 0x2E	; 46
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	f5 d2       	rcall	.+1514   	; 0x136e <fputc>
     d84:	c8 14       	cp	r12, r8
     d86:	d9 04       	cpc	r13, r9
     d88:	4c f0       	brlt	.+18     	; 0xd9c <vfprintf+0x31c>
     d8a:	8f 85       	ldd	r24, Y+15	; 0x0f
     d8c:	98 89       	ldd	r25, Y+16	; 0x10
     d8e:	88 15       	cp	r24, r8
     d90:	99 05       	cpc	r25, r9
     d92:	24 f4       	brge	.+8      	; 0xd9c <vfprintf+0x31c>
     d94:	ed 85       	ldd	r30, Y+13	; 0x0d
     d96:	fe 85       	ldd	r31, Y+14	; 0x0e
     d98:	81 81       	ldd	r24, Z+1	; 0x01
     d9a:	01 c0       	rjmp	.+2      	; 0xd9e <vfprintf+0x31e>
     d9c:	80 e3       	ldi	r24, 0x30	; 48
     d9e:	f1 e0       	ldi	r31, 0x01	; 1
     da0:	8f 1a       	sub	r8, r31
     da2:	91 08       	sbc	r9, r1
     da4:	2d 85       	ldd	r18, Y+13	; 0x0d
     da6:	3e 85       	ldd	r19, Y+14	; 0x0e
     da8:	2f 5f       	subi	r18, 0xFF	; 255
     daa:	3f 4f       	sbci	r19, 0xFF	; 255
     dac:	3e 87       	std	Y+14, r19	; 0x0e
     dae:	2d 87       	std	Y+13, r18	; 0x0d
     db0:	80 16       	cp	r8, r16
     db2:	91 06       	cpc	r9, r17
     db4:	24 f0       	brlt	.+8      	; 0xdbe <vfprintf+0x33e>
     db6:	b7 01       	movw	r22, r14
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	d9 d2       	rcall	.+1458   	; 0x136e <fputc>
     dbc:	db cf       	rjmp	.-74     	; 0xd74 <vfprintf+0x2f4>
     dbe:	c8 14       	cp	r12, r8
     dc0:	d9 04       	cpc	r13, r9
     dc2:	41 f4       	brne	.+16     	; 0xdd4 <vfprintf+0x354>
     dc4:	9a 81       	ldd	r25, Y+2	; 0x02
     dc6:	96 33       	cpi	r25, 0x36	; 54
     dc8:	20 f4       	brcc	.+8      	; 0xdd2 <vfprintf+0x352>
     dca:	95 33       	cpi	r25, 0x35	; 53
     dcc:	19 f4       	brne	.+6      	; 0xdd4 <vfprintf+0x354>
     dce:	3c 85       	ldd	r19, Y+12	; 0x0c
     dd0:	34 ff       	sbrs	r19, 4
     dd2:	81 e3       	ldi	r24, 0x31	; 49
     dd4:	b7 01       	movw	r22, r14
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	48 c0       	rjmp	.+144    	; 0xe6a <vfprintf+0x3ea>
     dda:	8a 81       	ldd	r24, Y+2	; 0x02
     ddc:	81 33       	cpi	r24, 0x31	; 49
     dde:	19 f0       	breq	.+6      	; 0xde6 <vfprintf+0x366>
     de0:	9c 85       	ldd	r25, Y+12	; 0x0c
     de2:	9f 7e       	andi	r25, 0xEF	; 239
     de4:	9c 87       	std	Y+12, r25	; 0x0c
     de6:	b7 01       	movw	r22, r14
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	c1 d2       	rcall	.+1410   	; 0x136e <fputc>
     dec:	11 11       	cpse	r17, r1
     dee:	05 c0       	rjmp	.+10     	; 0xdfa <vfprintf+0x37a>
     df0:	94 fc       	sbrc	r9, 4
     df2:	16 c0       	rjmp	.+44     	; 0xe20 <vfprintf+0x3a0>
     df4:	85 e6       	ldi	r24, 0x65	; 101
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	15 c0       	rjmp	.+42     	; 0xe24 <vfprintf+0x3a4>
     dfa:	b7 01       	movw	r22, r14
     dfc:	8e e2       	ldi	r24, 0x2E	; 46
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	b6 d2       	rcall	.+1388   	; 0x136e <fputc>
     e02:	1e 5f       	subi	r17, 0xFE	; 254
     e04:	82 e0       	ldi	r24, 0x02	; 2
     e06:	01 e0       	ldi	r16, 0x01	; 1
     e08:	08 0f       	add	r16, r24
     e0a:	f3 01       	movw	r30, r6
     e0c:	e8 0f       	add	r30, r24
     e0e:	f1 1d       	adc	r31, r1
     e10:	80 81       	ld	r24, Z
     e12:	b7 01       	movw	r22, r14
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	ab d2       	rcall	.+1366   	; 0x136e <fputc>
     e18:	80 2f       	mov	r24, r16
     e1a:	01 13       	cpse	r16, r17
     e1c:	f4 cf       	rjmp	.-24     	; 0xe06 <vfprintf+0x386>
     e1e:	e8 cf       	rjmp	.-48     	; 0xdf0 <vfprintf+0x370>
     e20:	85 e4       	ldi	r24, 0x45	; 69
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	b7 01       	movw	r22, r14
     e26:	a3 d2       	rcall	.+1350   	; 0x136e <fputc>
     e28:	d7 fc       	sbrc	r13, 7
     e2a:	06 c0       	rjmp	.+12     	; 0xe38 <vfprintf+0x3b8>
     e2c:	c1 14       	cp	r12, r1
     e2e:	d1 04       	cpc	r13, r1
     e30:	41 f4       	brne	.+16     	; 0xe42 <vfprintf+0x3c2>
     e32:	ec 85       	ldd	r30, Y+12	; 0x0c
     e34:	e4 ff       	sbrs	r30, 4
     e36:	05 c0       	rjmp	.+10     	; 0xe42 <vfprintf+0x3c2>
     e38:	d1 94       	neg	r13
     e3a:	c1 94       	neg	r12
     e3c:	d1 08       	sbc	r13, r1
     e3e:	8d e2       	ldi	r24, 0x2D	; 45
     e40:	01 c0       	rjmp	.+2      	; 0xe44 <vfprintf+0x3c4>
     e42:	8b e2       	ldi	r24, 0x2B	; 43
     e44:	b7 01       	movw	r22, r14
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	92 d2       	rcall	.+1316   	; 0x136e <fputc>
     e4a:	80 e3       	ldi	r24, 0x30	; 48
     e4c:	2a e0       	ldi	r18, 0x0A	; 10
     e4e:	c2 16       	cp	r12, r18
     e50:	d1 04       	cpc	r13, r1
     e52:	2c f0       	brlt	.+10     	; 0xe5e <vfprintf+0x3de>
     e54:	8f 5f       	subi	r24, 0xFF	; 255
     e56:	fa e0       	ldi	r31, 0x0A	; 10
     e58:	cf 1a       	sub	r12, r31
     e5a:	d1 08       	sbc	r13, r1
     e5c:	f7 cf       	rjmp	.-18     	; 0xe4c <vfprintf+0x3cc>
     e5e:	b7 01       	movw	r22, r14
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	85 d2       	rcall	.+1290   	; 0x136e <fputc>
     e64:	b7 01       	movw	r22, r14
     e66:	c6 01       	movw	r24, r12
     e68:	c0 96       	adiw	r24, 0x30	; 48
     e6a:	81 d2       	rcall	.+1282   	; 0x136e <fputc>
     e6c:	49 c1       	rjmp	.+658    	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
     e6e:	83 36       	cpi	r24, 0x63	; 99
     e70:	31 f0       	breq	.+12     	; 0xe7e <vfprintf+0x3fe>
     e72:	83 37       	cpi	r24, 0x73	; 115
     e74:	79 f0       	breq	.+30     	; 0xe94 <vfprintf+0x414>
     e76:	83 35       	cpi	r24, 0x53	; 83
     e78:	09 f0       	breq	.+2      	; 0xe7c <vfprintf+0x3fc>
     e7a:	52 c0       	rjmp	.+164    	; 0xf20 <vfprintf+0x4a0>
     e7c:	1f c0       	rjmp	.+62     	; 0xebc <vfprintf+0x43c>
     e7e:	56 01       	movw	r10, r12
     e80:	32 e0       	ldi	r19, 0x02	; 2
     e82:	a3 0e       	add	r10, r19
     e84:	b1 1c       	adc	r11, r1
     e86:	f6 01       	movw	r30, r12
     e88:	80 81       	ld	r24, Z
     e8a:	89 83       	std	Y+1, r24	; 0x01
     e8c:	01 e0       	ldi	r16, 0x01	; 1
     e8e:	10 e0       	ldi	r17, 0x00	; 0
     e90:	63 01       	movw	r12, r6
     e92:	11 c0       	rjmp	.+34     	; 0xeb6 <vfprintf+0x436>
     e94:	56 01       	movw	r10, r12
     e96:	f2 e0       	ldi	r31, 0x02	; 2
     e98:	af 0e       	add	r10, r31
     e9a:	b1 1c       	adc	r11, r1
     e9c:	f6 01       	movw	r30, r12
     e9e:	c0 80       	ld	r12, Z
     ea0:	d1 80       	ldd	r13, Z+1	; 0x01
     ea2:	96 fe       	sbrs	r9, 6
     ea4:	03 c0       	rjmp	.+6      	; 0xeac <vfprintf+0x42c>
     ea6:	61 2f       	mov	r22, r17
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <vfprintf+0x430>
     eac:	6f ef       	ldi	r22, 0xFF	; 255
     eae:	7f ef       	ldi	r23, 0xFF	; 255
     eb0:	c6 01       	movw	r24, r12
     eb2:	52 d2       	rcall	.+1188   	; 0x1358 <strnlen>
     eb4:	8c 01       	movw	r16, r24
     eb6:	f9 2d       	mov	r31, r9
     eb8:	ff 77       	andi	r31, 0x7F	; 127
     eba:	13 c0       	rjmp	.+38     	; 0xee2 <vfprintf+0x462>
     ebc:	56 01       	movw	r10, r12
     ebe:	22 e0       	ldi	r18, 0x02	; 2
     ec0:	a2 0e       	add	r10, r18
     ec2:	b1 1c       	adc	r11, r1
     ec4:	f6 01       	movw	r30, r12
     ec6:	c0 80       	ld	r12, Z
     ec8:	d1 80       	ldd	r13, Z+1	; 0x01
     eca:	96 fe       	sbrs	r9, 6
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <vfprintf+0x454>
     ece:	61 2f       	mov	r22, r17
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <vfprintf+0x458>
     ed4:	6f ef       	ldi	r22, 0xFF	; 255
     ed6:	7f ef       	ldi	r23, 0xFF	; 255
     ed8:	c6 01       	movw	r24, r12
     eda:	33 d2       	rcall	.+1126   	; 0x1342 <strnlen_P>
     edc:	8c 01       	movw	r16, r24
     ede:	f9 2d       	mov	r31, r9
     ee0:	f0 68       	ori	r31, 0x80	; 128
     ee2:	9f 2e       	mov	r9, r31
     ee4:	f3 fd       	sbrc	r31, 3
     ee6:	18 c0       	rjmp	.+48     	; 0xf18 <vfprintf+0x498>
     ee8:	85 2d       	mov	r24, r5
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	08 17       	cp	r16, r24
     eee:	19 07       	cpc	r17, r25
     ef0:	98 f4       	brcc	.+38     	; 0xf18 <vfprintf+0x498>
     ef2:	b7 01       	movw	r22, r14
     ef4:	80 e2       	ldi	r24, 0x20	; 32
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	3a d2       	rcall	.+1140   	; 0x136e <fputc>
     efa:	5a 94       	dec	r5
     efc:	f5 cf       	rjmp	.-22     	; 0xee8 <vfprintf+0x468>
     efe:	f6 01       	movw	r30, r12
     f00:	97 fc       	sbrc	r9, 7
     f02:	85 91       	lpm	r24, Z+
     f04:	97 fe       	sbrs	r9, 7
     f06:	81 91       	ld	r24, Z+
     f08:	6f 01       	movw	r12, r30
     f0a:	b7 01       	movw	r22, r14
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	2f d2       	rcall	.+1118   	; 0x136e <fputc>
     f10:	51 10       	cpse	r5, r1
     f12:	5a 94       	dec	r5
     f14:	01 50       	subi	r16, 0x01	; 1
     f16:	11 09       	sbc	r17, r1
     f18:	01 15       	cp	r16, r1
     f1a:	11 05       	cpc	r17, r1
     f1c:	81 f7       	brne	.-32     	; 0xefe <vfprintf+0x47e>
     f1e:	f0 c0       	rjmp	.+480    	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
     f20:	84 36       	cpi	r24, 0x64	; 100
     f22:	11 f0       	breq	.+4      	; 0xf28 <vfprintf+0x4a8>
     f24:	89 36       	cpi	r24, 0x69	; 105
     f26:	59 f5       	brne	.+86     	; 0xf7e <vfprintf+0x4fe>
     f28:	56 01       	movw	r10, r12
     f2a:	97 fe       	sbrs	r9, 7
     f2c:	09 c0       	rjmp	.+18     	; 0xf40 <vfprintf+0x4c0>
     f2e:	24 e0       	ldi	r18, 0x04	; 4
     f30:	a2 0e       	add	r10, r18
     f32:	b1 1c       	adc	r11, r1
     f34:	f6 01       	movw	r30, r12
     f36:	60 81       	ld	r22, Z
     f38:	71 81       	ldd	r23, Z+1	; 0x01
     f3a:	82 81       	ldd	r24, Z+2	; 0x02
     f3c:	93 81       	ldd	r25, Z+3	; 0x03
     f3e:	0a c0       	rjmp	.+20     	; 0xf54 <vfprintf+0x4d4>
     f40:	f2 e0       	ldi	r31, 0x02	; 2
     f42:	af 0e       	add	r10, r31
     f44:	b1 1c       	adc	r11, r1
     f46:	f6 01       	movw	r30, r12
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	07 2e       	mov	r0, r23
     f4e:	00 0c       	add	r0, r0
     f50:	88 0b       	sbc	r24, r24
     f52:	99 0b       	sbc	r25, r25
     f54:	f9 2d       	mov	r31, r9
     f56:	ff 76       	andi	r31, 0x6F	; 111
     f58:	9f 2e       	mov	r9, r31
     f5a:	97 ff       	sbrs	r25, 7
     f5c:	09 c0       	rjmp	.+18     	; 0xf70 <vfprintf+0x4f0>
     f5e:	90 95       	com	r25
     f60:	80 95       	com	r24
     f62:	70 95       	com	r23
     f64:	61 95       	neg	r22
     f66:	7f 4f       	sbci	r23, 0xFF	; 255
     f68:	8f 4f       	sbci	r24, 0xFF	; 255
     f6a:	9f 4f       	sbci	r25, 0xFF	; 255
     f6c:	f0 68       	ori	r31, 0x80	; 128
     f6e:	9f 2e       	mov	r9, r31
     f70:	2a e0       	ldi	r18, 0x0A	; 10
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	a3 01       	movw	r20, r6
     f76:	65 d2       	rcall	.+1226   	; 0x1442 <__ultoa_invert>
     f78:	c8 2e       	mov	r12, r24
     f7a:	c6 18       	sub	r12, r6
     f7c:	3e c0       	rjmp	.+124    	; 0xffa <vfprintf+0x57a>
     f7e:	09 2d       	mov	r16, r9
     f80:	85 37       	cpi	r24, 0x75	; 117
     f82:	21 f4       	brne	.+8      	; 0xf8c <vfprintf+0x50c>
     f84:	0f 7e       	andi	r16, 0xEF	; 239
     f86:	2a e0       	ldi	r18, 0x0A	; 10
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	1d c0       	rjmp	.+58     	; 0xfc6 <vfprintf+0x546>
     f8c:	09 7f       	andi	r16, 0xF9	; 249
     f8e:	8f 36       	cpi	r24, 0x6F	; 111
     f90:	91 f0       	breq	.+36     	; 0xfb6 <vfprintf+0x536>
     f92:	18 f4       	brcc	.+6      	; 0xf9a <vfprintf+0x51a>
     f94:	88 35       	cpi	r24, 0x58	; 88
     f96:	59 f0       	breq	.+22     	; 0xfae <vfprintf+0x52e>
     f98:	bc c0       	rjmp	.+376    	; 0x1112 <__EEPROM_REGION_LENGTH__+0x112>
     f9a:	80 37       	cpi	r24, 0x70	; 112
     f9c:	19 f0       	breq	.+6      	; 0xfa4 <vfprintf+0x524>
     f9e:	88 37       	cpi	r24, 0x78	; 120
     fa0:	11 f0       	breq	.+4      	; 0xfa6 <vfprintf+0x526>
     fa2:	b7 c0       	rjmp	.+366    	; 0x1112 <__EEPROM_REGION_LENGTH__+0x112>
     fa4:	00 61       	ori	r16, 0x10	; 16
     fa6:	04 ff       	sbrs	r16, 4
     fa8:	09 c0       	rjmp	.+18     	; 0xfbc <vfprintf+0x53c>
     faa:	04 60       	ori	r16, 0x04	; 4
     fac:	07 c0       	rjmp	.+14     	; 0xfbc <vfprintf+0x53c>
     fae:	94 fe       	sbrs	r9, 4
     fb0:	08 c0       	rjmp	.+16     	; 0xfc2 <vfprintf+0x542>
     fb2:	06 60       	ori	r16, 0x06	; 6
     fb4:	06 c0       	rjmp	.+12     	; 0xfc2 <vfprintf+0x542>
     fb6:	28 e0       	ldi	r18, 0x08	; 8
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	05 c0       	rjmp	.+10     	; 0xfc6 <vfprintf+0x546>
     fbc:	20 e1       	ldi	r18, 0x10	; 16
     fbe:	30 e0       	ldi	r19, 0x00	; 0
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <vfprintf+0x546>
     fc2:	20 e1       	ldi	r18, 0x10	; 16
     fc4:	32 e0       	ldi	r19, 0x02	; 2
     fc6:	56 01       	movw	r10, r12
     fc8:	07 ff       	sbrs	r16, 7
     fca:	09 c0       	rjmp	.+18     	; 0xfde <vfprintf+0x55e>
     fcc:	84 e0       	ldi	r24, 0x04	; 4
     fce:	a8 0e       	add	r10, r24
     fd0:	b1 1c       	adc	r11, r1
     fd2:	f6 01       	movw	r30, r12
     fd4:	60 81       	ld	r22, Z
     fd6:	71 81       	ldd	r23, Z+1	; 0x01
     fd8:	82 81       	ldd	r24, Z+2	; 0x02
     fda:	93 81       	ldd	r25, Z+3	; 0x03
     fdc:	08 c0       	rjmp	.+16     	; 0xfee <vfprintf+0x56e>
     fde:	f2 e0       	ldi	r31, 0x02	; 2
     fe0:	af 0e       	add	r10, r31
     fe2:	b1 1c       	adc	r11, r1
     fe4:	f6 01       	movw	r30, r12
     fe6:	60 81       	ld	r22, Z
     fe8:	71 81       	ldd	r23, Z+1	; 0x01
     fea:	80 e0       	ldi	r24, 0x00	; 0
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	a3 01       	movw	r20, r6
     ff0:	28 d2       	rcall	.+1104   	; 0x1442 <__ultoa_invert>
     ff2:	c8 2e       	mov	r12, r24
     ff4:	c6 18       	sub	r12, r6
     ff6:	0f 77       	andi	r16, 0x7F	; 127
     ff8:	90 2e       	mov	r9, r16
     ffa:	96 fe       	sbrs	r9, 6
     ffc:	0b c0       	rjmp	.+22     	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
     ffe:	09 2d       	mov	r16, r9
    1000:	0e 7f       	andi	r16, 0xFE	; 254
    1002:	c1 16       	cp	r12, r17
    1004:	50 f4       	brcc	.+20     	; 0x101a <__EEPROM_REGION_LENGTH__+0x1a>
    1006:	94 fe       	sbrs	r9, 4
    1008:	0a c0       	rjmp	.+20     	; 0x101e <__EEPROM_REGION_LENGTH__+0x1e>
    100a:	92 fc       	sbrc	r9, 2
    100c:	08 c0       	rjmp	.+16     	; 0x101e <__EEPROM_REGION_LENGTH__+0x1e>
    100e:	09 2d       	mov	r16, r9
    1010:	0e 7e       	andi	r16, 0xEE	; 238
    1012:	05 c0       	rjmp	.+10     	; 0x101e <__EEPROM_REGION_LENGTH__+0x1e>
    1014:	dc 2c       	mov	r13, r12
    1016:	09 2d       	mov	r16, r9
    1018:	03 c0       	rjmp	.+6      	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
    101a:	dc 2c       	mov	r13, r12
    101c:	01 c0       	rjmp	.+2      	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
    101e:	d1 2e       	mov	r13, r17
    1020:	04 ff       	sbrs	r16, 4
    1022:	0d c0       	rjmp	.+26     	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
    1024:	fe 01       	movw	r30, r28
    1026:	ec 0d       	add	r30, r12
    1028:	f1 1d       	adc	r31, r1
    102a:	80 81       	ld	r24, Z
    102c:	80 33       	cpi	r24, 0x30	; 48
    102e:	11 f4       	brne	.+4      	; 0x1034 <__EEPROM_REGION_LENGTH__+0x34>
    1030:	09 7e       	andi	r16, 0xE9	; 233
    1032:	09 c0       	rjmp	.+18     	; 0x1046 <__EEPROM_REGION_LENGTH__+0x46>
    1034:	02 ff       	sbrs	r16, 2
    1036:	06 c0       	rjmp	.+12     	; 0x1044 <__EEPROM_REGION_LENGTH__+0x44>
    1038:	d3 94       	inc	r13
    103a:	d3 94       	inc	r13
    103c:	04 c0       	rjmp	.+8      	; 0x1046 <__EEPROM_REGION_LENGTH__+0x46>
    103e:	80 2f       	mov	r24, r16
    1040:	86 78       	andi	r24, 0x86	; 134
    1042:	09 f0       	breq	.+2      	; 0x1046 <__EEPROM_REGION_LENGTH__+0x46>
    1044:	d3 94       	inc	r13
    1046:	03 fd       	sbrc	r16, 3
    1048:	10 c0       	rjmp	.+32     	; 0x106a <__EEPROM_REGION_LENGTH__+0x6a>
    104a:	00 ff       	sbrs	r16, 0
    104c:	06 c0       	rjmp	.+12     	; 0x105a <__EEPROM_REGION_LENGTH__+0x5a>
    104e:	1c 2d       	mov	r17, r12
    1050:	d5 14       	cp	r13, r5
    1052:	78 f4       	brcc	.+30     	; 0x1072 <__EEPROM_REGION_LENGTH__+0x72>
    1054:	15 0d       	add	r17, r5
    1056:	1d 19       	sub	r17, r13
    1058:	0c c0       	rjmp	.+24     	; 0x1072 <__EEPROM_REGION_LENGTH__+0x72>
    105a:	d5 14       	cp	r13, r5
    105c:	50 f4       	brcc	.+20     	; 0x1072 <__EEPROM_REGION_LENGTH__+0x72>
    105e:	b7 01       	movw	r22, r14
    1060:	80 e2       	ldi	r24, 0x20	; 32
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	84 d1       	rcall	.+776    	; 0x136e <fputc>
    1066:	d3 94       	inc	r13
    1068:	f8 cf       	rjmp	.-16     	; 0x105a <__EEPROM_REGION_LENGTH__+0x5a>
    106a:	d5 14       	cp	r13, r5
    106c:	10 f4       	brcc	.+4      	; 0x1072 <__EEPROM_REGION_LENGTH__+0x72>
    106e:	5d 18       	sub	r5, r13
    1070:	01 c0       	rjmp	.+2      	; 0x1074 <__EEPROM_REGION_LENGTH__+0x74>
    1072:	51 2c       	mov	r5, r1
    1074:	04 ff       	sbrs	r16, 4
    1076:	0f c0       	rjmp	.+30     	; 0x1096 <__EEPROM_REGION_LENGTH__+0x96>
    1078:	b7 01       	movw	r22, r14
    107a:	80 e3       	ldi	r24, 0x30	; 48
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	77 d1       	rcall	.+750    	; 0x136e <fputc>
    1080:	02 ff       	sbrs	r16, 2
    1082:	16 c0       	rjmp	.+44     	; 0x10b0 <__EEPROM_REGION_LENGTH__+0xb0>
    1084:	01 fd       	sbrc	r16, 1
    1086:	03 c0       	rjmp	.+6      	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    1088:	88 e7       	ldi	r24, 0x78	; 120
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <__EEPROM_REGION_LENGTH__+0x92>
    108e:	88 e5       	ldi	r24, 0x58	; 88
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	b7 01       	movw	r22, r14
    1094:	0c c0       	rjmp	.+24     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    1096:	80 2f       	mov	r24, r16
    1098:	86 78       	andi	r24, 0x86	; 134
    109a:	51 f0       	breq	.+20     	; 0x10b0 <__EEPROM_REGION_LENGTH__+0xb0>
    109c:	01 ff       	sbrs	r16, 1
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <__EEPROM_REGION_LENGTH__+0xa4>
    10a0:	8b e2       	ldi	r24, 0x2B	; 43
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <__EEPROM_REGION_LENGTH__+0xa6>
    10a4:	80 e2       	ldi	r24, 0x20	; 32
    10a6:	07 fd       	sbrc	r16, 7
    10a8:	8d e2       	ldi	r24, 0x2D	; 45
    10aa:	b7 01       	movw	r22, r14
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	5f d1       	rcall	.+702    	; 0x136e <fputc>
    10b0:	c1 16       	cp	r12, r17
    10b2:	30 f4       	brcc	.+12     	; 0x10c0 <__EEPROM_REGION_LENGTH__+0xc0>
    10b4:	b7 01       	movw	r22, r14
    10b6:	80 e3       	ldi	r24, 0x30	; 48
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	59 d1       	rcall	.+690    	; 0x136e <fputc>
    10bc:	11 50       	subi	r17, 0x01	; 1
    10be:	f8 cf       	rjmp	.-16     	; 0x10b0 <__EEPROM_REGION_LENGTH__+0xb0>
    10c0:	ca 94       	dec	r12
    10c2:	f3 01       	movw	r30, r6
    10c4:	ec 0d       	add	r30, r12
    10c6:	f1 1d       	adc	r31, r1
    10c8:	80 81       	ld	r24, Z
    10ca:	b7 01       	movw	r22, r14
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	4f d1       	rcall	.+670    	; 0x136e <fputc>
    10d0:	c1 10       	cpse	r12, r1
    10d2:	f6 cf       	rjmp	.-20     	; 0x10c0 <__EEPROM_REGION_LENGTH__+0xc0>
    10d4:	15 c0       	rjmp	.+42     	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
    10d6:	f4 e0       	ldi	r31, 0x04	; 4
    10d8:	f5 15       	cp	r31, r5
    10da:	50 f5       	brcc	.+84     	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    10dc:	84 e0       	ldi	r24, 0x04	; 4
    10de:	58 1a       	sub	r5, r24
    10e0:	93 fe       	sbrs	r9, 3
    10e2:	1e c0       	rjmp	.+60     	; 0x1120 <__EEPROM_REGION_LENGTH__+0x120>
    10e4:	01 11       	cpse	r16, r1
    10e6:	25 c0       	rjmp	.+74     	; 0x1132 <__EEPROM_REGION_LENGTH__+0x132>
    10e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    10ea:	23 ff       	sbrs	r18, 3
    10ec:	27 c0       	rjmp	.+78     	; 0x113c <__EEPROM_REGION_LENGTH__+0x13c>
    10ee:	04 ee       	ldi	r16, 0xE4	; 228
    10f0:	10 e0       	ldi	r17, 0x00	; 0
    10f2:	39 2d       	mov	r19, r9
    10f4:	30 71       	andi	r19, 0x10	; 16
    10f6:	93 2e       	mov	r9, r19
    10f8:	f8 01       	movw	r30, r16
    10fa:	84 91       	lpm	r24, Z
    10fc:	81 11       	cpse	r24, r1
    10fe:	21 c0       	rjmp	.+66     	; 0x1142 <__EEPROM_REGION_LENGTH__+0x142>
    1100:	55 20       	and	r5, r5
    1102:	09 f4       	brne	.+2      	; 0x1106 <__EEPROM_REGION_LENGTH__+0x106>
    1104:	fc cc       	rjmp	.-1544   	; 0xafe <vfprintf+0x7e>
    1106:	b7 01       	movw	r22, r14
    1108:	80 e2       	ldi	r24, 0x20	; 32
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	30 d1       	rcall	.+608    	; 0x136e <fputc>
    110e:	5a 94       	dec	r5
    1110:	f7 cf       	rjmp	.-18     	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
    1112:	f7 01       	movw	r30, r14
    1114:	86 81       	ldd	r24, Z+6	; 0x06
    1116:	97 81       	ldd	r25, Z+7	; 0x07
    1118:	23 c0       	rjmp	.+70     	; 0x1160 <__EEPROM_REGION_LENGTH__+0x160>
    111a:	8f ef       	ldi	r24, 0xFF	; 255
    111c:	9f ef       	ldi	r25, 0xFF	; 255
    111e:	20 c0       	rjmp	.+64     	; 0x1160 <__EEPROM_REGION_LENGTH__+0x160>
    1120:	b7 01       	movw	r22, r14
    1122:	80 e2       	ldi	r24, 0x20	; 32
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	23 d1       	rcall	.+582    	; 0x136e <fputc>
    1128:	5a 94       	dec	r5
    112a:	51 10       	cpse	r5, r1
    112c:	f9 cf       	rjmp	.-14     	; 0x1120 <__EEPROM_REGION_LENGTH__+0x120>
    112e:	da cf       	rjmp	.-76     	; 0x10e4 <__EEPROM_REGION_LENGTH__+0xe4>
    1130:	51 2c       	mov	r5, r1
    1132:	b7 01       	movw	r22, r14
    1134:	80 2f       	mov	r24, r16
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	1a d1       	rcall	.+564    	; 0x136e <fputc>
    113a:	d6 cf       	rjmp	.-84     	; 0x10e8 <__EEPROM_REGION_LENGTH__+0xe8>
    113c:	08 ee       	ldi	r16, 0xE8	; 232
    113e:	10 e0       	ldi	r17, 0x00	; 0
    1140:	d8 cf       	rjmp	.-80     	; 0x10f2 <__EEPROM_REGION_LENGTH__+0xf2>
    1142:	91 10       	cpse	r9, r1
    1144:	80 52       	subi	r24, 0x20	; 32
    1146:	b7 01       	movw	r22, r14
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	11 d1       	rcall	.+546    	; 0x136e <fputc>
    114c:	0f 5f       	subi	r16, 0xFF	; 255
    114e:	1f 4f       	sbci	r17, 0xFF	; 255
    1150:	d3 cf       	rjmp	.-90     	; 0x10f8 <__EEPROM_REGION_LENGTH__+0xf8>
    1152:	23 e0       	ldi	r18, 0x03	; 3
    1154:	25 15       	cp	r18, r5
    1156:	10 f4       	brcc	.+4      	; 0x115c <__EEPROM_REGION_LENGTH__+0x15c>
    1158:	83 e0       	ldi	r24, 0x03	; 3
    115a:	c1 cf       	rjmp	.-126    	; 0x10de <__EEPROM_REGION_LENGTH__+0xde>
    115c:	51 2c       	mov	r5, r1
    115e:	c4 cf       	rjmp	.-120    	; 0x10e8 <__EEPROM_REGION_LENGTH__+0xe8>
    1160:	60 96       	adiw	r28, 0x10	; 16
    1162:	0f b6       	in	r0, 0x3f	; 63
    1164:	f8 94       	cli
    1166:	de bf       	out	0x3e, r29	; 62
    1168:	0f be       	out	0x3f, r0	; 63
    116a:	cd bf       	out	0x3d, r28	; 61
    116c:	df 91       	pop	r29
    116e:	cf 91       	pop	r28
    1170:	1f 91       	pop	r17
    1172:	0f 91       	pop	r16
    1174:	ff 90       	pop	r15
    1176:	ef 90       	pop	r14
    1178:	df 90       	pop	r13
    117a:	cf 90       	pop	r12
    117c:	bf 90       	pop	r11
    117e:	af 90       	pop	r10
    1180:	9f 90       	pop	r9
    1182:	8f 90       	pop	r8
    1184:	7f 90       	pop	r7
    1186:	6f 90       	pop	r6
    1188:	5f 90       	pop	r5
    118a:	4f 90       	pop	r4
    118c:	3f 90       	pop	r3
    118e:	2f 90       	pop	r2
    1190:	08 95       	ret

00001192 <__ftoa_engine>:
    1192:	28 30       	cpi	r18, 0x08	; 8
    1194:	08 f0       	brcs	.+2      	; 0x1198 <__ftoa_engine+0x6>
    1196:	27 e0       	ldi	r18, 0x07	; 7
    1198:	33 27       	eor	r19, r19
    119a:	da 01       	movw	r26, r20
    119c:	99 0f       	add	r25, r25
    119e:	31 1d       	adc	r19, r1
    11a0:	87 fd       	sbrc	r24, 7
    11a2:	91 60       	ori	r25, 0x01	; 1
    11a4:	00 96       	adiw	r24, 0x00	; 0
    11a6:	61 05       	cpc	r22, r1
    11a8:	71 05       	cpc	r23, r1
    11aa:	39 f4       	brne	.+14     	; 0x11ba <__ftoa_engine+0x28>
    11ac:	32 60       	ori	r19, 0x02	; 2
    11ae:	2e 5f       	subi	r18, 0xFE	; 254
    11b0:	3d 93       	st	X+, r19
    11b2:	30 e3       	ldi	r19, 0x30	; 48
    11b4:	2a 95       	dec	r18
    11b6:	e1 f7       	brne	.-8      	; 0x11b0 <__ftoa_engine+0x1e>
    11b8:	08 95       	ret
    11ba:	9f 3f       	cpi	r25, 0xFF	; 255
    11bc:	30 f0       	brcs	.+12     	; 0x11ca <__ftoa_engine+0x38>
    11be:	80 38       	cpi	r24, 0x80	; 128
    11c0:	71 05       	cpc	r23, r1
    11c2:	61 05       	cpc	r22, r1
    11c4:	09 f0       	breq	.+2      	; 0x11c8 <__ftoa_engine+0x36>
    11c6:	3c 5f       	subi	r19, 0xFC	; 252
    11c8:	3c 5f       	subi	r19, 0xFC	; 252
    11ca:	3d 93       	st	X+, r19
    11cc:	91 30       	cpi	r25, 0x01	; 1
    11ce:	08 f0       	brcs	.+2      	; 0x11d2 <__ftoa_engine+0x40>
    11d0:	80 68       	ori	r24, 0x80	; 128
    11d2:	91 1d       	adc	r25, r1
    11d4:	df 93       	push	r29
    11d6:	cf 93       	push	r28
    11d8:	1f 93       	push	r17
    11da:	0f 93       	push	r16
    11dc:	ff 92       	push	r15
    11de:	ef 92       	push	r14
    11e0:	19 2f       	mov	r17, r25
    11e2:	98 7f       	andi	r25, 0xF8	; 248
    11e4:	96 95       	lsr	r25
    11e6:	e9 2f       	mov	r30, r25
    11e8:	96 95       	lsr	r25
    11ea:	96 95       	lsr	r25
    11ec:	e9 0f       	add	r30, r25
    11ee:	ff 27       	eor	r31, r31
    11f0:	ea 5b       	subi	r30, 0xBA	; 186
    11f2:	fe 4f       	sbci	r31, 0xFE	; 254
    11f4:	99 27       	eor	r25, r25
    11f6:	33 27       	eor	r19, r19
    11f8:	ee 24       	eor	r14, r14
    11fa:	ff 24       	eor	r15, r15
    11fc:	a7 01       	movw	r20, r14
    11fe:	e7 01       	movw	r28, r14
    1200:	05 90       	lpm	r0, Z+
    1202:	08 94       	sec
    1204:	07 94       	ror	r0
    1206:	28 f4       	brcc	.+10     	; 0x1212 <__ftoa_engine+0x80>
    1208:	36 0f       	add	r19, r22
    120a:	e7 1e       	adc	r14, r23
    120c:	f8 1e       	adc	r15, r24
    120e:	49 1f       	adc	r20, r25
    1210:	51 1d       	adc	r21, r1
    1212:	66 0f       	add	r22, r22
    1214:	77 1f       	adc	r23, r23
    1216:	88 1f       	adc	r24, r24
    1218:	99 1f       	adc	r25, r25
    121a:	06 94       	lsr	r0
    121c:	a1 f7       	brne	.-24     	; 0x1206 <__ftoa_engine+0x74>
    121e:	05 90       	lpm	r0, Z+
    1220:	07 94       	ror	r0
    1222:	28 f4       	brcc	.+10     	; 0x122e <__ftoa_engine+0x9c>
    1224:	e7 0e       	add	r14, r23
    1226:	f8 1e       	adc	r15, r24
    1228:	49 1f       	adc	r20, r25
    122a:	56 1f       	adc	r21, r22
    122c:	c1 1d       	adc	r28, r1
    122e:	77 0f       	add	r23, r23
    1230:	88 1f       	adc	r24, r24
    1232:	99 1f       	adc	r25, r25
    1234:	66 1f       	adc	r22, r22
    1236:	06 94       	lsr	r0
    1238:	a1 f7       	brne	.-24     	; 0x1222 <__ftoa_engine+0x90>
    123a:	05 90       	lpm	r0, Z+
    123c:	07 94       	ror	r0
    123e:	28 f4       	brcc	.+10     	; 0x124a <__ftoa_engine+0xb8>
    1240:	f8 0e       	add	r15, r24
    1242:	49 1f       	adc	r20, r25
    1244:	56 1f       	adc	r21, r22
    1246:	c7 1f       	adc	r28, r23
    1248:	d1 1d       	adc	r29, r1
    124a:	88 0f       	add	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	66 1f       	adc	r22, r22
    1250:	77 1f       	adc	r23, r23
    1252:	06 94       	lsr	r0
    1254:	a1 f7       	brne	.-24     	; 0x123e <__ftoa_engine+0xac>
    1256:	05 90       	lpm	r0, Z+
    1258:	07 94       	ror	r0
    125a:	20 f4       	brcc	.+8      	; 0x1264 <__ftoa_engine+0xd2>
    125c:	49 0f       	add	r20, r25
    125e:	56 1f       	adc	r21, r22
    1260:	c7 1f       	adc	r28, r23
    1262:	d8 1f       	adc	r29, r24
    1264:	99 0f       	add	r25, r25
    1266:	66 1f       	adc	r22, r22
    1268:	77 1f       	adc	r23, r23
    126a:	88 1f       	adc	r24, r24
    126c:	06 94       	lsr	r0
    126e:	a9 f7       	brne	.-22     	; 0x125a <__ftoa_engine+0xc8>
    1270:	84 91       	lpm	r24, Z
    1272:	10 95       	com	r17
    1274:	17 70       	andi	r17, 0x07	; 7
    1276:	41 f0       	breq	.+16     	; 0x1288 <__ftoa_engine+0xf6>
    1278:	d6 95       	lsr	r29
    127a:	c7 95       	ror	r28
    127c:	57 95       	ror	r21
    127e:	47 95       	ror	r20
    1280:	f7 94       	ror	r15
    1282:	e7 94       	ror	r14
    1284:	1a 95       	dec	r17
    1286:	c1 f7       	brne	.-16     	; 0x1278 <__ftoa_engine+0xe6>
    1288:	ec ee       	ldi	r30, 0xEC	; 236
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	68 94       	set
    128e:	15 90       	lpm	r1, Z+
    1290:	15 91       	lpm	r17, Z+
    1292:	35 91       	lpm	r19, Z+
    1294:	65 91       	lpm	r22, Z+
    1296:	95 91       	lpm	r25, Z+
    1298:	05 90       	lpm	r0, Z+
    129a:	7f e2       	ldi	r23, 0x2F	; 47
    129c:	73 95       	inc	r23
    129e:	e1 18       	sub	r14, r1
    12a0:	f1 0a       	sbc	r15, r17
    12a2:	43 0b       	sbc	r20, r19
    12a4:	56 0b       	sbc	r21, r22
    12a6:	c9 0b       	sbc	r28, r25
    12a8:	d0 09       	sbc	r29, r0
    12aa:	c0 f7       	brcc	.-16     	; 0x129c <__ftoa_engine+0x10a>
    12ac:	e1 0c       	add	r14, r1
    12ae:	f1 1e       	adc	r15, r17
    12b0:	43 1f       	adc	r20, r19
    12b2:	56 1f       	adc	r21, r22
    12b4:	c9 1f       	adc	r28, r25
    12b6:	d0 1d       	adc	r29, r0
    12b8:	7e f4       	brtc	.+30     	; 0x12d8 <__ftoa_engine+0x146>
    12ba:	70 33       	cpi	r23, 0x30	; 48
    12bc:	11 f4       	brne	.+4      	; 0x12c2 <__ftoa_engine+0x130>
    12be:	8a 95       	dec	r24
    12c0:	e6 cf       	rjmp	.-52     	; 0x128e <__ftoa_engine+0xfc>
    12c2:	e8 94       	clt
    12c4:	01 50       	subi	r16, 0x01	; 1
    12c6:	30 f0       	brcs	.+12     	; 0x12d4 <__ftoa_engine+0x142>
    12c8:	08 0f       	add	r16, r24
    12ca:	0a f4       	brpl	.+2      	; 0x12ce <__ftoa_engine+0x13c>
    12cc:	00 27       	eor	r16, r16
    12ce:	02 17       	cp	r16, r18
    12d0:	08 f4       	brcc	.+2      	; 0x12d4 <__ftoa_engine+0x142>
    12d2:	20 2f       	mov	r18, r16
    12d4:	23 95       	inc	r18
    12d6:	02 2f       	mov	r16, r18
    12d8:	7a 33       	cpi	r23, 0x3A	; 58
    12da:	28 f0       	brcs	.+10     	; 0x12e6 <__ftoa_engine+0x154>
    12dc:	79 e3       	ldi	r23, 0x39	; 57
    12de:	7d 93       	st	X+, r23
    12e0:	2a 95       	dec	r18
    12e2:	e9 f7       	brne	.-6      	; 0x12de <__ftoa_engine+0x14c>
    12e4:	10 c0       	rjmp	.+32     	; 0x1306 <__ftoa_engine+0x174>
    12e6:	7d 93       	st	X+, r23
    12e8:	2a 95       	dec	r18
    12ea:	89 f6       	brne	.-94     	; 0x128e <__ftoa_engine+0xfc>
    12ec:	06 94       	lsr	r0
    12ee:	97 95       	ror	r25
    12f0:	67 95       	ror	r22
    12f2:	37 95       	ror	r19
    12f4:	17 95       	ror	r17
    12f6:	17 94       	ror	r1
    12f8:	e1 18       	sub	r14, r1
    12fa:	f1 0a       	sbc	r15, r17
    12fc:	43 0b       	sbc	r20, r19
    12fe:	56 0b       	sbc	r21, r22
    1300:	c9 0b       	sbc	r28, r25
    1302:	d0 09       	sbc	r29, r0
    1304:	98 f0       	brcs	.+38     	; 0x132c <__ftoa_engine+0x19a>
    1306:	23 95       	inc	r18
    1308:	7e 91       	ld	r23, -X
    130a:	73 95       	inc	r23
    130c:	7a 33       	cpi	r23, 0x3A	; 58
    130e:	08 f0       	brcs	.+2      	; 0x1312 <__ftoa_engine+0x180>
    1310:	70 e3       	ldi	r23, 0x30	; 48
    1312:	7c 93       	st	X, r23
    1314:	20 13       	cpse	r18, r16
    1316:	b8 f7       	brcc	.-18     	; 0x1306 <__ftoa_engine+0x174>
    1318:	7e 91       	ld	r23, -X
    131a:	70 61       	ori	r23, 0x10	; 16
    131c:	7d 93       	st	X+, r23
    131e:	30 f0       	brcs	.+12     	; 0x132c <__ftoa_engine+0x19a>
    1320:	83 95       	inc	r24
    1322:	71 e3       	ldi	r23, 0x31	; 49
    1324:	7d 93       	st	X+, r23
    1326:	70 e3       	ldi	r23, 0x30	; 48
    1328:	2a 95       	dec	r18
    132a:	e1 f7       	brne	.-8      	; 0x1324 <__ftoa_engine+0x192>
    132c:	11 24       	eor	r1, r1
    132e:	ef 90       	pop	r14
    1330:	ff 90       	pop	r15
    1332:	0f 91       	pop	r16
    1334:	1f 91       	pop	r17
    1336:	cf 91       	pop	r28
    1338:	df 91       	pop	r29
    133a:	99 27       	eor	r25, r25
    133c:	87 fd       	sbrc	r24, 7
    133e:	90 95       	com	r25
    1340:	08 95       	ret

00001342 <strnlen_P>:
    1342:	fc 01       	movw	r30, r24
    1344:	05 90       	lpm	r0, Z+
    1346:	61 50       	subi	r22, 0x01	; 1
    1348:	70 40       	sbci	r23, 0x00	; 0
    134a:	01 10       	cpse	r0, r1
    134c:	d8 f7       	brcc	.-10     	; 0x1344 <strnlen_P+0x2>
    134e:	80 95       	com	r24
    1350:	90 95       	com	r25
    1352:	8e 0f       	add	r24, r30
    1354:	9f 1f       	adc	r25, r31
    1356:	08 95       	ret

00001358 <strnlen>:
    1358:	fc 01       	movw	r30, r24
    135a:	61 50       	subi	r22, 0x01	; 1
    135c:	70 40       	sbci	r23, 0x00	; 0
    135e:	01 90       	ld	r0, Z+
    1360:	01 10       	cpse	r0, r1
    1362:	d8 f7       	brcc	.-10     	; 0x135a <strnlen+0x2>
    1364:	80 95       	com	r24
    1366:	90 95       	com	r25
    1368:	8e 0f       	add	r24, r30
    136a:	9f 1f       	adc	r25, r31
    136c:	08 95       	ret

0000136e <fputc>:
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	cf 93       	push	r28
    1374:	df 93       	push	r29
    1376:	fb 01       	movw	r30, r22
    1378:	23 81       	ldd	r18, Z+3	; 0x03
    137a:	21 fd       	sbrc	r18, 1
    137c:	03 c0       	rjmp	.+6      	; 0x1384 <fputc+0x16>
    137e:	8f ef       	ldi	r24, 0xFF	; 255
    1380:	9f ef       	ldi	r25, 0xFF	; 255
    1382:	2c c0       	rjmp	.+88     	; 0x13dc <fputc+0x6e>
    1384:	22 ff       	sbrs	r18, 2
    1386:	16 c0       	rjmp	.+44     	; 0x13b4 <fputc+0x46>
    1388:	46 81       	ldd	r20, Z+6	; 0x06
    138a:	57 81       	ldd	r21, Z+7	; 0x07
    138c:	24 81       	ldd	r18, Z+4	; 0x04
    138e:	35 81       	ldd	r19, Z+5	; 0x05
    1390:	42 17       	cp	r20, r18
    1392:	53 07       	cpc	r21, r19
    1394:	44 f4       	brge	.+16     	; 0x13a6 <fputc+0x38>
    1396:	a0 81       	ld	r26, Z
    1398:	b1 81       	ldd	r27, Z+1	; 0x01
    139a:	9d 01       	movw	r18, r26
    139c:	2f 5f       	subi	r18, 0xFF	; 255
    139e:	3f 4f       	sbci	r19, 0xFF	; 255
    13a0:	31 83       	std	Z+1, r19	; 0x01
    13a2:	20 83       	st	Z, r18
    13a4:	8c 93       	st	X, r24
    13a6:	26 81       	ldd	r18, Z+6	; 0x06
    13a8:	37 81       	ldd	r19, Z+7	; 0x07
    13aa:	2f 5f       	subi	r18, 0xFF	; 255
    13ac:	3f 4f       	sbci	r19, 0xFF	; 255
    13ae:	37 83       	std	Z+7, r19	; 0x07
    13b0:	26 83       	std	Z+6, r18	; 0x06
    13b2:	14 c0       	rjmp	.+40     	; 0x13dc <fputc+0x6e>
    13b4:	8b 01       	movw	r16, r22
    13b6:	ec 01       	movw	r28, r24
    13b8:	fb 01       	movw	r30, r22
    13ba:	00 84       	ldd	r0, Z+8	; 0x08
    13bc:	f1 85       	ldd	r31, Z+9	; 0x09
    13be:	e0 2d       	mov	r30, r0
    13c0:	19 95       	eicall
    13c2:	89 2b       	or	r24, r25
    13c4:	e1 f6       	brne	.-72     	; 0x137e <fputc+0x10>
    13c6:	d8 01       	movw	r26, r16
    13c8:	16 96       	adiw	r26, 0x06	; 6
    13ca:	8d 91       	ld	r24, X+
    13cc:	9c 91       	ld	r25, X
    13ce:	17 97       	sbiw	r26, 0x07	; 7
    13d0:	01 96       	adiw	r24, 0x01	; 1
    13d2:	17 96       	adiw	r26, 0x07	; 7
    13d4:	9c 93       	st	X, r25
    13d6:	8e 93       	st	-X, r24
    13d8:	16 97       	sbiw	r26, 0x06	; 6
    13da:	ce 01       	movw	r24, r28
    13dc:	df 91       	pop	r29
    13de:	cf 91       	pop	r28
    13e0:	1f 91       	pop	r17
    13e2:	0f 91       	pop	r16
    13e4:	08 95       	ret

000013e6 <sprintf>:
    13e6:	0f 93       	push	r16
    13e8:	1f 93       	push	r17
    13ea:	cf 93       	push	r28
    13ec:	df 93       	push	r29
    13ee:	cd b7       	in	r28, 0x3d	; 61
    13f0:	de b7       	in	r29, 0x3e	; 62
    13f2:	2e 97       	sbiw	r28, 0x0e	; 14
    13f4:	0f b6       	in	r0, 0x3f	; 63
    13f6:	f8 94       	cli
    13f8:	de bf       	out	0x3e, r29	; 62
    13fa:	0f be       	out	0x3f, r0	; 63
    13fc:	cd bf       	out	0x3d, r28	; 61
    13fe:	0e 89       	ldd	r16, Y+22	; 0x16
    1400:	1f 89       	ldd	r17, Y+23	; 0x17
    1402:	86 e0       	ldi	r24, 0x06	; 6
    1404:	8c 83       	std	Y+4, r24	; 0x04
    1406:	1a 83       	std	Y+2, r17	; 0x02
    1408:	09 83       	std	Y+1, r16	; 0x01
    140a:	8f ef       	ldi	r24, 0xFF	; 255
    140c:	9f e7       	ldi	r25, 0x7F	; 127
    140e:	9e 83       	std	Y+6, r25	; 0x06
    1410:	8d 83       	std	Y+5, r24	; 0x05
    1412:	ae 01       	movw	r20, r28
    1414:	46 5e       	subi	r20, 0xE6	; 230
    1416:	5f 4f       	sbci	r21, 0xFF	; 255
    1418:	68 8d       	ldd	r22, Y+24	; 0x18
    141a:	79 8d       	ldd	r23, Y+25	; 0x19
    141c:	ce 01       	movw	r24, r28
    141e:	01 96       	adiw	r24, 0x01	; 1
    1420:	2f db       	rcall	.-2466   	; 0xa80 <vfprintf>
    1422:	ef 81       	ldd	r30, Y+7	; 0x07
    1424:	f8 85       	ldd	r31, Y+8	; 0x08
    1426:	e0 0f       	add	r30, r16
    1428:	f1 1f       	adc	r31, r17
    142a:	10 82       	st	Z, r1
    142c:	2e 96       	adiw	r28, 0x0e	; 14
    142e:	0f b6       	in	r0, 0x3f	; 63
    1430:	f8 94       	cli
    1432:	de bf       	out	0x3e, r29	; 62
    1434:	0f be       	out	0x3f, r0	; 63
    1436:	cd bf       	out	0x3d, r28	; 61
    1438:	df 91       	pop	r29
    143a:	cf 91       	pop	r28
    143c:	1f 91       	pop	r17
    143e:	0f 91       	pop	r16
    1440:	08 95       	ret

00001442 <__ultoa_invert>:
    1442:	fa 01       	movw	r30, r20
    1444:	aa 27       	eor	r26, r26
    1446:	28 30       	cpi	r18, 0x08	; 8
    1448:	51 f1       	breq	.+84     	; 0x149e <__ultoa_invert+0x5c>
    144a:	20 31       	cpi	r18, 0x10	; 16
    144c:	81 f1       	breq	.+96     	; 0x14ae <__ultoa_invert+0x6c>
    144e:	e8 94       	clt
    1450:	6f 93       	push	r22
    1452:	6e 7f       	andi	r22, 0xFE	; 254
    1454:	6e 5f       	subi	r22, 0xFE	; 254
    1456:	7f 4f       	sbci	r23, 0xFF	; 255
    1458:	8f 4f       	sbci	r24, 0xFF	; 255
    145a:	9f 4f       	sbci	r25, 0xFF	; 255
    145c:	af 4f       	sbci	r26, 0xFF	; 255
    145e:	b1 e0       	ldi	r27, 0x01	; 1
    1460:	3e d0       	rcall	.+124    	; 0x14de <__ultoa_invert+0x9c>
    1462:	b4 e0       	ldi	r27, 0x04	; 4
    1464:	3c d0       	rcall	.+120    	; 0x14de <__ultoa_invert+0x9c>
    1466:	67 0f       	add	r22, r23
    1468:	78 1f       	adc	r23, r24
    146a:	89 1f       	adc	r24, r25
    146c:	9a 1f       	adc	r25, r26
    146e:	a1 1d       	adc	r26, r1
    1470:	68 0f       	add	r22, r24
    1472:	79 1f       	adc	r23, r25
    1474:	8a 1f       	adc	r24, r26
    1476:	91 1d       	adc	r25, r1
    1478:	a1 1d       	adc	r26, r1
    147a:	6a 0f       	add	r22, r26
    147c:	71 1d       	adc	r23, r1
    147e:	81 1d       	adc	r24, r1
    1480:	91 1d       	adc	r25, r1
    1482:	a1 1d       	adc	r26, r1
    1484:	20 d0       	rcall	.+64     	; 0x14c6 <__ultoa_invert+0x84>
    1486:	09 f4       	brne	.+2      	; 0x148a <__ultoa_invert+0x48>
    1488:	68 94       	set
    148a:	3f 91       	pop	r19
    148c:	2a e0       	ldi	r18, 0x0A	; 10
    148e:	26 9f       	mul	r18, r22
    1490:	11 24       	eor	r1, r1
    1492:	30 19       	sub	r19, r0
    1494:	30 5d       	subi	r19, 0xD0	; 208
    1496:	31 93       	st	Z+, r19
    1498:	de f6       	brtc	.-74     	; 0x1450 <__ultoa_invert+0xe>
    149a:	cf 01       	movw	r24, r30
    149c:	08 95       	ret
    149e:	46 2f       	mov	r20, r22
    14a0:	47 70       	andi	r20, 0x07	; 7
    14a2:	40 5d       	subi	r20, 0xD0	; 208
    14a4:	41 93       	st	Z+, r20
    14a6:	b3 e0       	ldi	r27, 0x03	; 3
    14a8:	0f d0       	rcall	.+30     	; 0x14c8 <__ultoa_invert+0x86>
    14aa:	c9 f7       	brne	.-14     	; 0x149e <__ultoa_invert+0x5c>
    14ac:	f6 cf       	rjmp	.-20     	; 0x149a <__ultoa_invert+0x58>
    14ae:	46 2f       	mov	r20, r22
    14b0:	4f 70       	andi	r20, 0x0F	; 15
    14b2:	40 5d       	subi	r20, 0xD0	; 208
    14b4:	4a 33       	cpi	r20, 0x3A	; 58
    14b6:	18 f0       	brcs	.+6      	; 0x14be <__ultoa_invert+0x7c>
    14b8:	49 5d       	subi	r20, 0xD9	; 217
    14ba:	31 fd       	sbrc	r19, 1
    14bc:	40 52       	subi	r20, 0x20	; 32
    14be:	41 93       	st	Z+, r20
    14c0:	02 d0       	rcall	.+4      	; 0x14c6 <__ultoa_invert+0x84>
    14c2:	a9 f7       	brne	.-22     	; 0x14ae <__ultoa_invert+0x6c>
    14c4:	ea cf       	rjmp	.-44     	; 0x149a <__ultoa_invert+0x58>
    14c6:	b4 e0       	ldi	r27, 0x04	; 4
    14c8:	a6 95       	lsr	r26
    14ca:	97 95       	ror	r25
    14cc:	87 95       	ror	r24
    14ce:	77 95       	ror	r23
    14d0:	67 95       	ror	r22
    14d2:	ba 95       	dec	r27
    14d4:	c9 f7       	brne	.-14     	; 0x14c8 <__ultoa_invert+0x86>
    14d6:	00 97       	sbiw	r24, 0x00	; 0
    14d8:	61 05       	cpc	r22, r1
    14da:	71 05       	cpc	r23, r1
    14dc:	08 95       	ret
    14de:	9b 01       	movw	r18, r22
    14e0:	ac 01       	movw	r20, r24
    14e2:	0a 2e       	mov	r0, r26
    14e4:	06 94       	lsr	r0
    14e6:	57 95       	ror	r21
    14e8:	47 95       	ror	r20
    14ea:	37 95       	ror	r19
    14ec:	27 95       	ror	r18
    14ee:	ba 95       	dec	r27
    14f0:	c9 f7       	brne	.-14     	; 0x14e4 <__ultoa_invert+0xa2>
    14f2:	62 0f       	add	r22, r18
    14f4:	73 1f       	adc	r23, r19
    14f6:	84 1f       	adc	r24, r20
    14f8:	95 1f       	adc	r25, r21
    14fa:	a0 1d       	adc	r26, r0
    14fc:	08 95       	ret

000014fe <_exit>:
    14fe:	f8 94       	cli

00001500 <__stop_program>:
    1500:	ff cf       	rjmp	.-2      	; 0x1500 <__stop_program>
